{"version":3,"sources":["actions/types.js","actions/UserActions.js","hocs/PrivateRoute.js","hocs/UnPrivateRoute.js","components/layout/createAccountModal/CreateAccountForm.js","img/createPlan.png","img/findWorkout.png","img/usePlan.png","components/layout/createAccountModal/CreateAccountInfo.js","components/layout/createAccountModal/CreateAccountModal.js","img/muscleGroups/abs.png","img/muscleGroups/arms.png","img/muscleGroups/back.png","img/muscleGroups/front.png","img/muscleGroups/legs.png","img/muscleGroups/side.png","img/subMuscles/chest/clavicularPectoral.png","img/subMuscles/test.png","img/subMuscles/chest/costalPectoral.png","img/subMuscles/chest/sternalPectoral.png","img/subMuscles/back/trapezius.png","img/subMuscles/back/teresMajor&Minor.png","img/subMuscles/back/erectorSpinae.png","img/subMuscles/back/latissimusDorsi.png","img/subMuscles/back/rhomboids.png","img/subMuscles/shoulders/anteriorDeltoidHead.png","img/subMuscles/shoulders/lateralDeltoidHead.png","img/subMuscles/shoulders/posteriorDeltoidHead.png","img/subMuscles/shoulders/rotatorCuff.jpg","img/subMuscles/abs/externalAbdominalOblique.png","img/subMuscles/abs/internalAbdominalOblique.png","img/subMuscles/abs/lowerRectusAbdominis.png","img/subMuscles/abs/upperRectusAbdominis.png","img/subMuscles/abs/serratus.png","img/subMuscles/arms/brachialis.png","img/subMuscles/arms/forearms.png","img/subMuscles/arms/lateralTricepHead.png","img/subMuscles/arms/longBicepHead.png","img/subMuscles/arms/longTricepHead.png","img/subMuscles/arms/medialTricepHead.png","img/subMuscles/arms/shortBicepHead.png","img/subMuscles/legs/gastrocnemius.jpg","img/subMuscles/legs/gluteusMaximus.jpg","img/subMuscles/legs/hamstrings.jpg","img/subMuscles/legs/hipAbductors.jpg","img/subMuscles/legs/hipAdductors.jpg","img/subMuscles/legs/vastusMedialis.jpg","img/subMuscles/legs/vastusLateralisAndRectusFemoris.jpg","img/equipment/benchPress.png","img/equipment/dumbbells.png","img/equipment/smithMachine.png","img/equipment/chestPressMachine.png","img/equipment/dipStation.png","img/equipment/tBar.png","img/equipment/cableMachine.png","img/equipment/butterflyMachine.png","img/equipment/suspensionTrainer.png","img/equipment/battleRopes.png","img/equipment/barbell.png","img/equipment/pullUpBar.png","img/equipment/cableRowMachine.png","img/equipment/pulldownMachine.png","img/equipment/romanChair.png","img/equipment/rearFlyMachine.png","img/equipment/overheadPressMachine.png","img/equipment/crunchMachine.png","img/equipment/medicineBall.png","img/equipment/adjustableBench.png","img/equipment/abRoller.png","img/equipment/hexBar.png","img/equipment/kettlebell.png","img/equipment/legCurlMachine.png","img/equipment/kickbackMachine.png","img/equipment/legExtensionMachine.png","img/equipment/legPressMachine.png","img/equipment/sled.png","img/equipment/bicepCurlMachine.png","img/equipment/jumpRope.png","img/equipment/calfRaiseMachine.png","img/equipment/tricepExtension.png","img/equipment/highRowMachine.png","img/equipment/lowRowMachine.png","img/equipment/lateralRaiseMachine.png","img/equipment/calfExtensionMachine.png","img/equipment/squatMachine.png","img/equipment/tricepBar.png","img/equipment/obliqueCrunchMachine.png","img/equipment/proneLegCurlMachine.png","img/equipment/hackSquatMachine.png","img/equipment/legRaiseStation.png","img/equipment/noEquipment.gif","img/equipment/abductionMachine.png","img/equipment/adductionMachine.png","pages/landingPage/LandingPage.js","img/icon.png","components/layout/Preloader.js","pages/homePage/HomePage.js","components/plans/PlanStep.js","components/plans/PlanEditor.js","actions/WorkoutPlanActions.js","components/layout/backButton/BackButton.js","components/layout/nextButton/NextButton.js","pages/NewPlanPage.js","pages/EditPlanPage.js","components/layout/planPreview/PlanPreview.js","actions/WorkoutActions.js","components/selectors/muscles/MuscleGroupSelector.js","actions/GeneratedWorkoutsActions.js","pages/MuscleGroupSelectionPage.js","components/layout/subMuscleButton/SubMuscleButton.js","components/layout/primaryButton/PrimaryButton.js","components/layout/secondaryButton/SecondaryButton.js","components/selectors/subMuscles/SubMuscleSelector.js","pages/SubMuscleSelectionPage.js","components/layout/equipmentButton/EquipmentButton.js","components/selectors/equipment/EquipmentSelector.js","pages/EquipmentSelectionPage.js","components/layout/workoutCard/WorkoutCard.js","components/layout/restartButton/RestartButton.js","pages/generatedWorkoutsPage/GeneratedWorkoutsPage.js","pages/AddStepPage.js","components/layout/planActionCard/PlanActionCard.js","pages/usePlansPage/UsePlansPage.js","components/layout/guideStep/GuideStep.js","components/layout/restStep/RestCard.js","components/layout/restStep/RestStep.js","pages/planGuidePage/PlanGuidePage.js","reducers/WorkoutReducer.js","reducers/GeneratedWorkoutsReducer.js","reducers/UserReducer.js","reducers/WorkoutPlanReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_EQUIPMENT","SET_SUB_MUSCLES","SET_MUSCLE_GROUP","GET_EQUIPMENT_OPTIONS","SET_SELECTIONS_LOADING","SELECTIONS_ERROR","GET_WORKOUTS","CLEAR_WORKOUTS","SHUFFLE_WORKOUTS","WORKOUTS_ERROR","SET_WORKOUTS_LOADING","SET_CURR_USER","SET_AUTHENTICATED","SET_MESSAGE","USERS_ERROR","SET_PLAN_ID","SET_PLAN_NAME","SET_PLAN_STEPS","ADD_PLAN_STEP","GET_CURR_USER_PLANS","CLEAR_USER","DELETE_CURR_USER_PLAN","PLANS_ERROR","loginUser","user","dispatch","a","fetch","method","body","JSON","stringify","headers","res","status","json","data","type","payload","console","log","response","getUserPlans","authenticated","workoutPlans","setMessage","message","checkAuthenticated","connect","state","currUser","isAuthenticated","Component","component","rest","useEffect","render","props","to","registerUser","msgBody","useState","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","className","value","onChange","e","target","htmlFor","href","onClick","preventDefault","M","toast","html","length","CreateAccountInfo","src","CreatePlanImg","alt","UsePlanImg","WorkoutFinderImg","CreateAccountModal","showMoreInfo","setShowMoreInfo","modals","document","querySelectorAll","Modal","init","id","style","overflow","left","right","Front","window","open","autoComplete","Preloader","logoutUser","credentials","success","width","undefined","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","Icon","color","FindWorkoutImg","PlanStep","step","reps","sets","setRest","workoutRest","workout_id","_id","deleteStep","editStep","isLast","workout","setWorkout","fetchWorkout","position","demo","isNaN","parseInt","PlanEditor","planName","planSteps","setPlanName","setPlanSteps","history","useHistory","filter","newVals","editIdx","findIndex","newStep","newPlanSteps","onDragEnd","result","destination","steps","Array","from","splice","source","index","reorderedStep","droppableId","provided","droppableProps","ref","innerRef","map","draggableId","toString","draggableProps","dragHandleProps","placeholder","push","setPlanID","BackButton","altText","isNested","NextButton","plan","addPlan","msgError","isValidInput","checkValidInput","updatePlan","selectedWorkout","workoutImgs","setWorkoutImgs","getWorkoutImg","workoutID","getWorkoutImgArr","workoutIDs","Promise","all","imgs","img","BenchPress","setEquipment","equipment","setSubMuscles","subMuscles","muscleGroup","setMuscleGroup","clearWorkouts","muscleGroupImgs","Back","Side","Abs","Legs","Arms","instance","Carousel","indicators","onCycleTo","marginTop","muscle","MuscleGroupSelectionPage","getNextSelector","subMuscle","includes","selected","setSelected","elems","Tooltip","opacity","boxShadow","newSelected","handleSelect","PrimaryButton","tooltipText","materialIcon","forEach","tooltip","bottom","SecondaryButton","subMuscleOptions","setSubMuscleOptions","subMuscleOptionRows","setSubMuscleOptionRows","ClavicularPectoral","SternalPectoral","CostalPectoral","AnteriorDeltoidHead","LateralDeltoidHead","PosteriorDeltoidHead","RotatorCuff","LatissimusDorsi","Rhomboids","TeresMajorAndMinor","ErectorSpinae","Trapezius","GluteusMaximus","VastusMedialis","VastusLateralisAndRectusFemoris","Hamstrings","Gastrocnemius","HipAbductors","HipAdductors","InternalAbdominalOblique","ExternalAbdominalOblique","UpperRectusAbdominis","LowerRectusAbdominis","Serratus","ShortBicepHead","LongBicepHead","Brachialis","Forearms","LongTricepHead","MedialTricepHead","LateralTricepHead","rows","i","slice","makeRows","row","rowIndex","subMuscleOption","getPreviousSelector","equipmentItem","images","Dumbbells","SmithMachine","ChestPressMachine","DipStation","T_BAR","CableMachine","ButterflyMachine","SuspensionTrainer","Barbell","Pull_UpBar","CableRowMachine","PulldownMachine","RomanChair","RearFlyMachine","OverheadPressMachine","CrunchMachine","MedicineBall","AbRoller","HexBar","Kettlebell","LegCurlMachine","KickbackMachine","LegExtensionMachine","LegPressMachine","Sled","BicepCurlMachine","CalfRaiseMachine","TricepExtension","HighRowMachine","LowRowMachine","LateralRaiseMachine","CalfExtensionMachine","SquatMachine","HackSquatMachine","TricepBar","ObliqueCrunchMachine","ProneLegCurlMachine","LegRaiseStation","NoEquipment","AbductionMachine","AdductionMachine","equipmentOptions","loading","getEquipmentOptions","snakeCaseStringify","arr","item","_","snakeCase","join","setSelectionsLoading","equipmentOptionRows","setEquipmentOptionRows","lowerCase","WorkoutCard","setSelectedWorkout","rel","tips","tip","targets","tangents","tangent","RestartButton","generatedWorkouts","getWorkouts","setWorkoutsLoading","shuffleWorkouts","workouts","cardRows","setCardRows","size","workoutItem","is","Nested","addPlanStep","selectorIdx","setSelectorIdx","selectors","overflowY","PlanActionCard","deleteUserPlan","setWorkouts","getWorkout","getWorkoutArr","elem","getInstance","destroy","borderRight","paddingRight","marginRight","currUserPlans","planID","GuideStep","currSet","RestCard","count","RestStep","restTime","getNext","timer","useRef","setCount","paused","setPaused","startTimer","clearInterval","current","setInterval","prevCount","currStepIdx","setCurrStepIdx","isRest","setIsRest","setCurrSet","finished","setFinished","fontSize","paddingTop","initialState","error","WorkoutReducer","action","shuffle","array","randomIndex","currentIndex","Math","floor","random","GeneratedWorkoutsReducer","UserReducer","WorkoutPlanReducer","combineReducers","middleware","thunk","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","persistedStore","persistor","persistStore","App","AutoInit","GetToken","token","useParams","Cookies","set","path","exact","LandingPage","children","HomePage","NewPlanPage","EditPlanPage","AddStepPage","UsePlansPage","PlanGuidePage","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bc5e6f1d.chunk.js","sourcesContent":["export const SET_EQUIPMENT = 'SET_EQUIPMENT';\r\nexport const SET_SUB_MUSCLES = 'SET_SUB_MUSCLES';\r\nexport const SET_MUSCLE_GROUP = 'SET_MUSCLE_GROUP';\r\nexport const GET_EQUIPMENT_OPTIONS = 'GET_EQUIPMENT_OPTIONS';\r\nexport const SET_SELECTIONS_LOADING = 'SET_SELECTIONS_LOADING';\r\nexport const SELECTIONS_ERROR = 'SELECTIONS_ERROR';\r\n\r\nexport const GET_WORKOUTS = 'GET_WORKOUTS';\r\nexport const CLEAR_WORKOUTS = 'CLEAR_WORKOUTS';\r\nexport const SHUFFLE_WORKOUTS = 'SHUFFLE_WORKOUTS';\r\nexport const WORKOUTS_ERROR = 'WORKOUT_ERROR';\r\nexport const SET_WORKOUTS_LOADING = 'SET_WORKOUTS_LOADING';\r\n\r\nexport const SET_CURR_USER = 'SET_CURR_USER';\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\nexport const USERS_ERROR = 'USERS_ERROR';\r\n\r\nexport const SET_PLAN_ID = 'SET_PLAN_ID';\r\nexport const SET_PLAN_NAME = 'SET_PLAN_NAME';\r\nexport const SET_PLAN_STEPS = 'SET_PLAN_STEPS';\r\nexport const ADD_PLAN_STEP = 'ADD_PLAN_STEP';\r\nexport const GET_CURR_USER_PLANS = 'GET_CURR_USER_PLANS';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\nexport const DELETE_CURR_USER_PLAN = 'DELETE_CURR_USER_PLAN';\r\nexport const PLANS_ERROR = 'PLANS_ERROR';\r\n","import {\r\n  SET_CURR_USER,\r\n  SET_AUTHENTICATED,\r\n  GET_CURR_USER_PLANS,\r\n  DELETE_CURR_USER_PLAN,\r\n  SET_MESSAGE,\r\n  USERS_ERROR,\r\n  CLEAR_USER,\r\n} from './types';\r\n\r\nexport const loginUser = (user) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      dispatch({\r\n        type: SET_AUTHENTICATED,\r\n        payload: true,\r\n      });\r\n      dispatch({\r\n        type: SET_CURR_USER,\r\n        payload: data.user,\r\n      });\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: null,\r\n      });\r\n    } else {\r\n      //dispatch error message username or password incorrect\r\n      dispatch({\r\n        type: CLEAR_USER,\r\n      });\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: 'Incorrect email or password.',\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const getUserPlans = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/plans');\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      if (data.authenticated === true) {\r\n        dispatch({\r\n          type: GET_CURR_USER_PLANS,\r\n          payload: data.workoutPlans,\r\n        });\r\n      }\r\n    } else {\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: \"Cannot get user's workout plans\",\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const deleteUserPlan = (planID) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/plan/' + planID, {\r\n      method: 'DELETE',\r\n    });\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      if (!data.message.msgError) {\r\n        dispatch({\r\n          type: DELETE_CURR_USER_PLAN,\r\n          payload: planID,\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const registerUser = (user) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: data.message.msgBody,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/logout', {\r\n      method: 'POST',\r\n      credentials: 'same-origin',\r\n    });\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      dispatch({\r\n        type: CLEAR_USER,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const setMessage = (message) => {\r\n  return {\r\n    type: SET_MESSAGE,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/authenticated');\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      dispatch({\r\n        type: SET_AUTHENTICATED,\r\n        payload: true,\r\n      });\r\n      dispatch({\r\n        type: SET_CURR_USER,\r\n        payload: data.user,\r\n      });\r\n      return true;\r\n    } else {\r\n      dispatch({\r\n        type: CLEAR_USER,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: USERS_ERROR, payload: err.response.data });\r\n  }\r\n  return false;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated } from '../actions/UserActions';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  currUser,\r\n  isAuthenticated,\r\n  checkAuthenticated,\r\n  ...rest\r\n}) => {\r\n  useEffect(() => {\r\n    checkAuthenticated();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isAuthenticated) {\r\n          return <Redirect to='/' />;\r\n        }\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currUser: state.user.currUser,\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  checkAuthenticated: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps, { checkAuthenticated })(PrivateRoute);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated } from '../actions/UserActions';\r\n\r\nconst UnPrivateRoute = ({\r\n  component: Component,\r\n  currUser,\r\n  isAuthenticated,\r\n  checkAuthenticated,\r\n  ...rest\r\n}) => {\r\n  useEffect(() => {\r\n    checkAuthenticated();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuthenticated) {\r\n          return <Redirect to='/home-page' />;\r\n        }\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currUser: state.user.currUser,\r\n  isAuthenticated: state.user.isAuthenticated,\r\n});\r\n\r\nUnPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  checkAuthenticated: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps, { checkAuthenticated })(UnPrivateRoute);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser, loginUser } from '../../../actions/UserActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './CreateAccountModal.css';\r\n\r\nconst CreateAccountForm = ({ registerUser, loginUser }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      email === '' ||\r\n      password === '' ||\r\n      confirmPassword === '' ||\r\n      name === ''\r\n    ) {\r\n      M.toast({ html: 'Please enter a valid email and password...' });\r\n      setEmail('');\r\n      setName('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    } else if (password.length < 8) {\r\n      M.toast({ html: 'Password must be at least 8 characters long...' });\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    } else if (name.length > 20) {\r\n      M.toast({ html: 'Name cannot be longer than 20 characters...' });\r\n      setName('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    } else if (password !== confirmPassword) {\r\n      M.toast({ html: 'The provided passwords do not match...' });\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    } else {\r\n      registerUser({\r\n        email: email,\r\n        name: name,\r\n        password: password,\r\n      });\r\n      setEmail('');\r\n      setName('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='createAccountForm'>\r\n      <h4 className='instructionsHeader'>Create Account</h4>\r\n      <form>\r\n        <div className='row'>\r\n          <div className='input-field col s12 xl8 offset-xl2'>\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor='email' className='active'>\r\n              Email\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field col s12 xl8 offset-xl2'>\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <label htmlFor='name' className='active'>\r\n              Preferred Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field col s12 xl8 offset-xl2'>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <label htmlFor='password' className='active'>\r\n              Password\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field col s12 xl8 offset-xl2'>\r\n            <input\r\n              type='password'\r\n              name='confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n            <label htmlFor='confirmPassword' className='active'>\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <a href='/' onClick={handleSubmit} className='signInButton'>\r\n          Enter\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateAccountForm.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {\r\n  registerUser,\r\n  loginUser,\r\n})(CreateAccountForm);\r\n","export default __webpack_public_path__ + \"static/media/createPlan.d27a6e6a.png\";","export default __webpack_public_path__ + \"static/media/findWorkout.12aba44c.png\";","export default __webpack_public_path__ + \"static/media/usePlan.746f5085.png\";","import React from 'react';\r\nimport CreatePlanImg from '../../../img/createPlan.png';\r\nimport WorkoutFinderImg from '../../../img/findWorkout.png';\r\nimport UsePlanImg from '../../../img/usePlan.png';\r\nimport './CreateAccountModal.css';\r\n\r\nconst CreateAccountInfo = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='instructionsHeader'>\r\n        What features come with my account?\r\n      </h1>\r\n      <div className='row'>\r\n        <div className='col s12 xl6 accountFeatureDiv'>\r\n          <img\r\n            src={CreatePlanImg}\r\n            alt='email-img'\r\n            className='accountFeatureImg'\r\n          />\r\n          <h4 className='accountFeatureTitle'>Make A Plan!</h4>\r\n          <p className='accountFeatureDescription'>\r\n            Use the Workout Finder to put together your custom workout plans,\r\n            complete with reps, sets, and rest times.\r\n          </p>\r\n        </div>\r\n        <div className='col s12 xl6 accountFeatureDiv'>\r\n          <img\r\n            src={UsePlanImg}\r\n            alt='social-media-img'\r\n            className='accountFeatureImg'\r\n          />\r\n          <h4 className='accountFeatureTitle'>Guided Fitness</h4>\r\n          <p className='accountFeatureDescription'>\r\n            Utilize your personalized workout plans to run custom guided\r\n            workouts, including rest timers and step-by-step instruction.\r\n          </p>\r\n        </div>\r\n        <div className='col s12 xl6 offset-xl3 accountFeatureDiv'>\r\n          <img\r\n            className='accountFeatureImg'\r\n            src={WorkoutFinderImg}\r\n            alt='workout-finder-img'\r\n          />\r\n          <h4 className='accountFeatureTitle'>Workout Finder</h4>\r\n          <p className='accountFeatureDescription'>\r\n            Use the in-depth Workout Finder to search our extensive workout\r\n            database. Explore muscles worked, video demonstrations, and helpful\r\n            tips for each workout.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccountInfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CreateAccountForm from './CreateAccountForm';\r\nimport CreateAccountInfo from './CreateAccountInfo';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nimport './CreateAccountModal.css';\r\n\r\nconst CreateAccountModal = () => {\r\n  const [showMoreInfo, setShowMoreInfo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var modals = document.querySelectorAll('.modal');\r\n    M.Modal.init(modals, {});\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id='create-account-modal'\r\n      className='modal createAccountModal'\r\n      style={{ overflow: !showMoreInfo ? 'hidden' : 'auto' }}\r\n    >\r\n      <div className='modal-content'>\r\n        {!showMoreInfo ? (\r\n          <>\r\n            <CreateAccountForm />\r\n            <div\r\n              className='createAccountFooter'\r\n              style={{ right: '10%' }}\r\n              onClick={() => setShowMoreInfo(true)}\r\n            >\r\n              <p>\r\n                More Info{' '}\r\n                <span className='moreInfoIcon'>\r\n                  <i className='material-icons tiny'>chevron_right</i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <CreateAccountInfo />\r\n            <div\r\n              className='createAccountFooter'\r\n              style={{ left: '10%' }}\r\n              onClick={() => setShowMoreInfo(false)}\r\n            >\r\n              <p>\r\n                <span className='createAccountIcon'>\r\n                  <i className='material-icons tiny'>chevron_left</i>\r\n                </span>\r\n                Create Account\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccountModal;\r\n","export default __webpack_public_path__ + \"static/media/abs.c31fc480.png\";","export default __webpack_public_path__ + \"static/media/arms.21bc5cf3.png\";","export default __webpack_public_path__ + \"static/media/back.9d7ed934.png\";","export default __webpack_public_path__ + \"static/media/front.1d5366ce.png\";","export default __webpack_public_path__ + \"static/media/legs.f84180f8.png\";","export default __webpack_public_path__ + \"static/media/side.0791d648.png\";","export default __webpack_public_path__ + \"static/media/clavicularPectoral.cbce42b6.png\";","export default __webpack_public_path__ + \"static/media/test.a29e7970.png\";","export default __webpack_public_path__ + \"static/media/costalPectoral.b3c8a479.png\";","export default __webpack_public_path__ + \"static/media/sternalPectoral.94963a82.png\";","export default __webpack_public_path__ + \"static/media/trapezius.2cb36a6c.png\";","export default __webpack_public_path__ + \"static/media/teresMajor&Minor.4766c127.png\";","export default __webpack_public_path__ + \"static/media/erectorSpinae.e11f321e.png\";","export default __webpack_public_path__ + \"static/media/latissimusDorsi.4c16e305.png\";","export default __webpack_public_path__ + \"static/media/rhomboids.b86b3151.png\";","export default __webpack_public_path__ + \"static/media/anteriorDeltoidHead.877392ff.png\";","export default __webpack_public_path__ + \"static/media/lateralDeltoidHead.e24538c3.png\";","export default __webpack_public_path__ + \"static/media/posteriorDeltoidHead.31afb6e4.png\";","export default __webpack_public_path__ + \"static/media/rotatorCuff.3f250e65.jpg\";","export default __webpack_public_path__ + \"static/media/externalAbdominalOblique.94f0f132.png\";","export default __webpack_public_path__ + \"static/media/internalAbdominalOblique.cbbe2b76.png\";","export default __webpack_public_path__ + \"static/media/lowerRectusAbdominis.d3d5acf1.png\";","export default __webpack_public_path__ + \"static/media/upperRectusAbdominis.48365464.png\";","export default __webpack_public_path__ + \"static/media/serratus.b2ac8c87.png\";","export default __webpack_public_path__ + \"static/media/brachialis.6c8f29a2.png\";","export default __webpack_public_path__ + \"static/media/forearms.e1c33c41.png\";","export default __webpack_public_path__ + \"static/media/lateralTricepHead.da1a3a05.png\";","export default __webpack_public_path__ + \"static/media/longBicepHead.49b6e680.png\";","export default __webpack_public_path__ + \"static/media/longTricepHead.18fb8b7d.png\";","export default __webpack_public_path__ + \"static/media/medialTricepHead.1955ef7b.png\";","export default __webpack_public_path__ + \"static/media/shortBicepHead.b4e65a03.png\";","export default __webpack_public_path__ + \"static/media/gastrocnemius.1ff9e81c.jpg\";","export default __webpack_public_path__ + \"static/media/gluteusMaximus.0c292ad1.jpg\";","export default __webpack_public_path__ + \"static/media/hamstrings.8b676bb0.jpg\";","export default __webpack_public_path__ + \"static/media/hipAbductors.1d1f5cb4.jpg\";","export default __webpack_public_path__ + \"static/media/hipAdductors.dc95720e.jpg\";","export default __webpack_public_path__ + \"static/media/vastusMedialis.a6c02beb.jpg\";","export default __webpack_public_path__ + \"static/media/vastusLateralisAndRectusFemoris.969aa46f.jpg\";","export default __webpack_public_path__ + \"static/media/benchPress.f7dd84b0.png\";","export default __webpack_public_path__ + \"static/media/dumbbells.9f458e6e.png\";","export default __webpack_public_path__ + \"static/media/smithMachine.858771d4.png\";","export default __webpack_public_path__ + \"static/media/chestPressMachine.48b82e4a.png\";","export default __webpack_public_path__ + \"static/media/dipStation.33225cbb.png\";","export default __webpack_public_path__ + \"static/media/tBar.cdaf6592.png\";","export default __webpack_public_path__ + \"static/media/cableMachine.d5758cdd.png\";","export default __webpack_public_path__ + \"static/media/butterflyMachine.ef173e88.png\";","export default __webpack_public_path__ + \"static/media/suspensionTrainer.9842b143.png\";","export default __webpack_public_path__ + \"static/media/battleRopes.390c9e73.png\";","export default __webpack_public_path__ + \"static/media/barbell.0a85adf0.png\";","export default __webpack_public_path__ + \"static/media/pullUpBar.8b907450.png\";","export default __webpack_public_path__ + \"static/media/cableRowMachine.76c79e61.png\";","export default __webpack_public_path__ + \"static/media/pulldownMachine.cd96028a.png\";","export default __webpack_public_path__ + \"static/media/romanChair.cb5c50cc.png\";","export default __webpack_public_path__ + \"static/media/rearFlyMachine.ce8ee945.png\";","export default __webpack_public_path__ + \"static/media/overheadPressMachine.a7a04ede.png\";","export default __webpack_public_path__ + \"static/media/crunchMachine.a1ec1612.png\";","export default __webpack_public_path__ + \"static/media/medicineBall.e288de99.png\";","export default __webpack_public_path__ + \"static/media/adjustableBench.46dd71e9.png\";","export default __webpack_public_path__ + \"static/media/abRoller.0bc585e1.png\";","export default __webpack_public_path__ + \"static/media/hexBar.9181df7f.png\";","export default __webpack_public_path__ + \"static/media/kettlebell.8903004e.png\";","export default __webpack_public_path__ + \"static/media/legCurlMachine.a625bb06.png\";","export default __webpack_public_path__ + \"static/media/kickbackMachine.265826d4.png\";","export default __webpack_public_path__ + \"static/media/legExtensionMachine.e184f336.png\";","export default __webpack_public_path__ + \"static/media/legPressMachine.9cb7fd4e.png\";","export default __webpack_public_path__ + \"static/media/sled.c9db0fba.png\";","export default __webpack_public_path__ + \"static/media/bicepCurlMachine.54e11196.png\";","export default __webpack_public_path__ + \"static/media/jumpRope.c8c99b8e.png\";","export default __webpack_public_path__ + \"static/media/calfRaiseMachine.6ef94a39.png\";","export default __webpack_public_path__ + \"static/media/tricepExtension.e07f02d9.png\";","export default __webpack_public_path__ + \"static/media/highRowMachine.76a1b358.png\";","export default __webpack_public_path__ + \"static/media/lowRowMachine.23a37a86.png\";","export default __webpack_public_path__ + \"static/media/lateralRaiseMachine.2e80e5c2.png\";","export default __webpack_public_path__ + \"static/media/calfExtensionMachine.b5a64da5.png\";","export default __webpack_public_path__ + \"static/media/squatMachine.1085a99a.png\";","export default __webpack_public_path__ + \"static/media/tricepBar.d2840ea5.png\";","export default __webpack_public_path__ + \"static/media/obliqueCrunchMachine.5e673a05.png\";","export default __webpack_public_path__ + \"static/media/proneLegCurlMachine.3d5f49cf.png\";","export default __webpack_public_path__ + \"static/media/hackSquatMachine.4eb46570.png\";","export default __webpack_public_path__ + \"static/media/legRaiseStation.3d82629f.png\";","export default __webpack_public_path__ + \"static/media/noEquipment.b5a5f727.gif\";","export default __webpack_public_path__ + \"static/media/abductionMachine.bb04237b.png\";","export default __webpack_public_path__ + \"static/media/adductionMachine.c5e9ce97.png\";","import React, { useState, useEffect } from 'react';\r\nimport CreateAccountModal from '../../components/layout/createAccountModal/CreateAccountModal';\r\nimport { Front } from '../../img/index';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, setMessage } from '../../actions/UserActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = ({ loginUser, setMessage, message }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    loginUser({\r\n      email: email,\r\n      password: password,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      M.toast({ html: message });\r\n      setMessage(null);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      <div className='landingContainer row'>\r\n        <div className='col m6 landingImgDiv hide-on-med-and-down'>\r\n          <img className='landingImg' src={Front} alt='landing-img' />\r\n        </div>\r\n        <div className='col s12 l6 loginDiv'>\r\n          <h1 className='instructionsHeader'>WORKOUT BUILDER</h1>\r\n          <div className='row'>\r\n            <div className='col s8 offset-s2 xl6 offset-xl3 socialBtnDiv'>\r\n              <a\r\n                className='socialBtn facebook'\r\n                href='#!'\r\n                onClick={() => {\r\n                  window.open(\r\n                    'https://workout-builder-website.herokuapp.com/user/auth/facebook',\r\n                    '_self'\r\n                  );\r\n                }}\r\n              >\r\n                <i className='fab fa-facebook' />\r\n                &nbsp; Sign in with Facebook\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='col s8 offset-s2 xl6 offset-xl3 socialBtnDiv'>\r\n              <a\r\n                className='socialBtn google'\r\n                href='#!'\r\n                onClick={() => {\r\n                  window.open(\r\n                    'https://workout-builder-website.herokuapp.com/user/auth/google',\r\n                    '_self'\r\n                  );\r\n                }}\r\n              >\r\n                <i className='fab fa-google' /> &nbsp; Sign in with Google\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* <hr /> */}\r\n          <form className='loginForm'>\r\n            <div className='row'>\r\n              <div className='input-field col s8 xl6 offset-s2 offset-xl3'>\r\n                <input\r\n                  id='email'\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label htmlFor='email'>Email</label>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='input-field col s8 xl6 offset-s2 offset-xl3'>\r\n                <input\r\n                  id='password'\r\n                  type='password'\r\n                  autoComplete='on'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <label htmlFor='password'>Password</label>\r\n              </div>\r\n            </div>\r\n            <a className='signInButton' href='/home-page' onClick={onSubmit}>\r\n              SIGN IN\r\n            </a>\r\n          </form>\r\n          <p className='accountSubText'>\r\n            <a href='#create-account-modal' className='modal-trigger'>\r\n              Create an account{' '}\r\n              <i className='material-icons tiny'>info_outline</i>\r\n            </a>\r\n          </p>\r\n          <p className='accountSubText'>\r\n            <a href='/muscle-group-selection' className='modal-trigger '>\r\n              Continue as guest\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <CreateAccountModal />\r\n    </>\r\n  );\r\n};\r\n\r\nLandingPage.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  setMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  message: state.user.message,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser, setMessage })(LandingPage);\r\n","export default __webpack_public_path__ + \"static/media/icon.e706093a.png\";","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress lighten-5'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Icon from '../../img/icon.png';\r\nimport CreatePlanImg from '../../img/createPlan.png';\r\nimport FindWorkoutImg from '../../img/findWorkout.png';\r\nimport UsePlanImg from '../../img/usePlan.png';\r\nimport Preloader from '../../components/layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, setMessage } from '../../actions/UserActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = ({ logoutUser, setMessage, message, currUser }) => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      M.toast({ html: message });\r\n      setMessage(null);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    logoutUser();\r\n  };\r\n  if (!currUser) return <Preloader />;\r\n\r\n  return (\r\n    <>\r\n      <div className='topBar'>\r\n        <div className='siteDiv'>\r\n          <p className='siteTitle'>\r\n            <img className='siteIcon' src={Icon} alt='site-icon' /> &nbsp;&nbsp;\r\n            {windowSize.width > 550 && 'WORKOUT BUILDER'}\r\n          </p>\r\n        </div>\r\n        <div className='userDiv'>\r\n          <ul>\r\n            <li className='userAction'>\r\n              <a href='#!' onClick={handleLogout}>\r\n                logout\r\n              </a>\r\n            </li>\r\n            {/* <li className='userAction'>\r\n              <a href='#!'>profile</a>\r\n            </li> */}\r\n            {/* {windowSize.width > 550 && <li>{currUser.name}</li>} */}\r\n            <li>{currUser.name}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <h1 className='homeTitle'>\r\n          <span style={{ color: 'white' }}>Hi, </span>\r\n          {currUser.name}.\r\n        </h1>\r\n        <div className='row'>\r\n          <div className='col s12 m6 l4'>\r\n            <div className='homeActionDiv'>\r\n              <img\r\n                className='homeActionImg'\r\n                src={FindWorkoutImg}\r\n                alt='workout-img'\r\n              />\r\n              <br />\r\n              <a href='/muscle-group-selection' className='homeActions'>\r\n                Find Workouts\r\n              </a>\r\n              <p className='homeActionDescription'>\r\n                Use the Workout Finder to search our workout database.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className='col s12 m6 l4'>\r\n            <div className='homeActionDiv'>\r\n              <img\r\n                className='homeActionImg'\r\n                src={CreatePlanImg}\r\n                alt='computer-img'\r\n              />\r\n              <br />\r\n              <a href='/plan' className='homeActions'>\r\n                New Workout Plan\r\n              </a>\r\n              <p className='homeActionDescription'>\r\n                Using our Workout Finder, put together your own workout plan,\r\n                complete with reps, sets, and rest times.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className='col s12 m6 offset-m3 l4'>\r\n            <div className='homeActionDiv'>\r\n              <img className='homeActionImg' src={UsePlanImg} alt='plan-img' />\r\n              <br />\r\n              <a href='/plans' className='homeActions'>\r\n                Use Workout Plans\r\n              </a>\r\n              <p className='homeActionDescription'>\r\n                Select from your personal workout plans for a step-by-step\r\n                exercise guide.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  currUser: PropTypes.object,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  setMessage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  message: state.user.message,\r\n  currUser: state.user.currUser,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  logoutUser,\r\n  setMessage,\r\n})(HomePage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Preloader from '../layout/Preloader';\r\nimport './PlanStep.css';\r\n\r\n//display: workout name, workout gif\r\n//edit: reps(12), sets(3), set rest(60)s, workout rest(120)s <- invalid field if isLastWorkout\r\nconst PlanStep = ({\r\n  step: { reps, sets, setRest, workoutRest, workout_id, _id },\r\n  deleteStep,\r\n  editStep,\r\n  isLast,\r\n}) => {\r\n  const [workout, setWorkout] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (isLast) {\r\n      editStep({ workoutRest: 0 }, _id);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [isLast, _id]);\r\n\r\n  useEffect(() => {\r\n    const fetchWorkout = async () => {\r\n      const res = await fetch('/workout/' + workout_id);\r\n      const data = await res.json();\r\n      setWorkout(data);\r\n    };\r\n    fetchWorkout();\r\n  }, [workout_id]);\r\n\r\n  return (\r\n    <div className='row stepDiv'>\r\n      <div style={{ position: 'relative' }}>\r\n        <i\r\n          className='small material-icons deleteIcon'\r\n          onClick={() => deleteStep(_id)}\r\n        >\r\n          delete\r\n        </i>\r\n      </div>\r\n      {!workout ? (\r\n        <Preloader />\r\n      ) : (\r\n        <>\r\n          <div className='col s4'>\r\n            <h4 className='workoutName'>{workout.name}</h4>\r\n            <img\r\n              className='workoutDemo'\r\n              src={workout.demo}\r\n              alt='workout-demo'\r\n            />\r\n          </div>\r\n          <div className='col s8 stepInputsDiv'>\r\n            <div className='row'>\r\n              <div className='col s4 xl6'>\r\n                <div className='input-field col s12 m8 l6 offset-m1 offset-l2'>\r\n                  <input\r\n                    id='reps'\r\n                    type='number'\r\n                    value={!isNaN(reps) && reps !== null ? reps : ''}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 0)\r\n                        editStep({ reps: parseInt(e.target.value) }, _id);\r\n                    }}\r\n                  />\r\n                  <label className='active' htmlFor='reps'>\r\n                    Reps\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className='col s8 xl6'>\r\n                <div className='input-field col s12 m8 l6 offset-m1 offset-l2'>\r\n                  <input\r\n                    id='setRest'\r\n                    type='number'\r\n                    value={!isNaN(setRest) && setRest !== null ? setRest : ''}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 0)\r\n                        editStep({ setRest: parseInt(e.target.value) }, _id);\r\n                    }}\r\n                  />\r\n                  <label className='active' htmlFor='reps'>\r\n                    Set Rest (s)\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className='col s4 xl6'>\r\n                <div className='input-field col s12 m8 l6 offset-m1 offset-l2'>\r\n                  <input\r\n                    id='sets'\r\n                    type='number'\r\n                    value={!isNaN(sets) && sets !== null ? sets : ''}\r\n                    onChange={(e) => {\r\n                      if (e.target.value >= 0)\r\n                        editStep({ sets: parseInt(e.target.value) }, _id);\r\n                    }}\r\n                  />\r\n                  <label className='active' htmlFor='reps'>\r\n                    Sets\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              {!isLast && (\r\n                <div className='col s8 xl6'>\r\n                  <div className='input-field col s12 m8 l6 offset-m1 offset-l2'>\r\n                    <input\r\n                      id='reps'\r\n                      type='number'\r\n                      value={\r\n                        !isNaN(workoutRest) && workoutRest !== null\r\n                          ? workoutRest\r\n                          : ''\r\n                      }\r\n                      onChange={(e) => {\r\n                        if (e.target.value >= 0)\r\n                          editStep(\r\n                            { workoutRest: parseInt(e.target.value) },\r\n                            _id\r\n                          );\r\n                      }}\r\n                    />\r\n                    <label className='active' htmlFor='reps'>\r\n                      Workout Rest (s)\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPlanStep.propTypes = {\r\n  step: PropTypes.object.isRequired,\r\n  deleteStep: PropTypes.func.isRequired,\r\n  editStep: PropTypes.func.isRequired,\r\n  isLast: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default PlanStep;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PlanStep from './PlanStep';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './PlanEditor.css';\r\n\r\n//setName\r\n//PlanStep\r\n//newPlanStep\r\nconst PlanEditor = ({ planName, planSteps, setPlanName, setPlanSteps }) => {\r\n  let history = useHistory();\r\n  const deleteStep = (id) => {\r\n    setPlanSteps(planSteps.filter((step) => step._id !== id));\r\n  };\r\n\r\n  const editStep = (newVals, id) => {\r\n    const editIdx = planSteps.findIndex((step) => step._id === id);\r\n    const newStep = { ...planSteps[editIdx], ...newVals };\r\n    let newPlanSteps = planSteps;\r\n    newPlanSteps[editIdx] = newStep;\r\n    setPlanSteps([...newPlanSteps]);\r\n  };\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const steps = Array.from(planSteps);\r\n    const [reorderedStep] = steps.splice(result.source.index, 1);\r\n    steps.splice(result.destination.index, 0, reorderedStep);\r\n    setPlanSteps([...steps]);\r\n  };\r\n\r\n  return (\r\n    <div className='planEditor'>\r\n      <div className='row'>\r\n        <div className='input-field col s12 m6 offset-m3 l4 offset-l4'>\r\n          <input\r\n            id='planName'\r\n            type='text'\r\n            value={planName}\r\n            onChange={(e) => setPlanName(e.target.value)}\r\n          />\r\n          <label htmlFor='planName' className='active'>\r\n            Plan Name\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId='planSteps'>\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {planSteps.map((step, index) => (\r\n                <Draggable\r\n                  key={step._id + index}\r\n                  draggableId={step._id + index.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided) => (\r\n                    <div\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      ref={provided.innerRef}\r\n                    >\r\n                      <PlanStep\r\n                        step={step}\r\n                        deleteStep={deleteStep}\r\n                        editStep={editStep}\r\n                        isLast={index === planSteps.length - 1 ? true : false}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <div className='addStepDiv' onClick={() => history.push('/add-step')}>\r\n        + Add Step\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlanEditor.propTypes = {\r\n  planName: PropTypes.string.isRequired,\r\n  setPlanName: PropTypes.func.isRequired,\r\n  planSteps: PropTypes.array.isRequired,\r\n  setPlanSteps: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PlanEditor;\r\n","import {\r\n  SET_PLAN_ID,\r\n  SET_PLAN_NAME,\r\n  SET_PLAN_STEPS,\r\n  ADD_PLAN_STEP,\r\n  SET_MESSAGE,\r\n  PLANS_ERROR,\r\n} from './types';\r\n\r\nimport { getUserPlans } from './UserActions';\r\n\r\nexport const setPlanID = (id) => {\r\n  return { type: SET_PLAN_ID, payload: id };\r\n};\r\n\r\nexport const setPlanName = (name) => {\r\n  return { type: SET_PLAN_NAME, payload: name };\r\n};\r\n\r\nexport const setPlanSteps = (steps) => {\r\n  return { type: SET_PLAN_STEPS, payload: steps };\r\n};\r\n\r\nexport const addPlanStep = (step) => {\r\n  return { type: ADD_PLAN_STEP, payload: step };\r\n};\r\n\r\nexport const addPlan = (plan) => async (dispatch) => {\r\n  //try save plan (edit to be save or replace)\r\n  //if valid id edit if invalid add\r\n  try {\r\n    const res = await fetch('/user/plan', {\r\n      method: 'POST',\r\n      body: JSON.stringify(plan),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      if (data.message.msgError === false) {\r\n        dispatch(getUserPlans());\r\n      } else {\r\n        dispatch({ type: SET_MESSAGE, payload: data.message.msgBody });\r\n      }\r\n    } else {\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: 'Cannot add workout plan.',\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: PLANS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const updatePlan = (id, plan) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch('/user/plan/' + id, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(plan),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (res.status !== 401) {\r\n      const data = await res.json();\r\n      if (data.message.msgError === false) {\r\n        dispatch(getUserPlans());\r\n      } else {\r\n        dispatch({ type: SET_MESSAGE, payload: data.message.msgBody });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: PLANS_ERROR, payload: err.response.data });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './BackButton.css';\r\n\r\nconst BackButton = ({ onClick, altText, target, isNested }) => {\r\n  return (\r\n    <a\r\n      href={target}\r\n      className={'backButton' + (isNested ? ' nested' : '')}\r\n      onClick={onClick}\r\n    >\r\n      {altText ? altText : 'BACK'}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React from 'react';\r\nimport './NextButton.css';\r\n\r\nconst NextButton = ({ target, onClick, altText }) => {\r\n  return (\r\n    <a href={target} className='nextButton' onClick={onClick}>\r\n      {altText ? altText : 'NEXT'}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default NextButton;\r\n","import React from 'react';\r\nimport PlanEditor from '../components/plans/PlanEditor';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  addPlan,\r\n} from '../actions/WorkoutPlanActions';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\nimport NextButton from '../components/layout/nextButton/NextButton';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst NewPlanPage = ({\r\n  name,\r\n  steps,\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  addPlan,\r\n}) => {\r\n  const handleSave = (e) => {\r\n    const checkValidInput = () => {\r\n      for (const step of steps) {\r\n        if (\r\n          isNaN(step.reps) ||\r\n          isNaN(step.sets) ||\r\n          isNaN(step.setRest) ||\r\n          isNaN(step.workoutRest)\r\n        )\r\n          return false;\r\n        if (step.reps <= 0 || step.sets <= 0) return false;\r\n        if (step.setRest < 0 || step.workoutRest < 0) return false;\r\n      }\r\n      return true;\r\n    };\r\n    const isValidInput = checkValidInput();\r\n    if (name.length > 0 && steps.length > 0 && isValidInput) {\r\n      addPlan({\r\n        name: name,\r\n        steps: steps.map(({ _id, ...rest }) => rest),\r\n      });\r\n      setPlanID(null);\r\n      setPlanSteps([]);\r\n      setPlanName('');\r\n    } else {\r\n      if (name.length <= 0) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please enter a plan name...' });\r\n      }\r\n      if (steps.length <= 0) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please add at least one step...' });\r\n      }\r\n      if (!isValidInput) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please provide valid reps, sets, and rest times...' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <h1 className='instructionsHeader'>New Workout Plan</h1>\r\n        <PlanEditor\r\n          planName={name}\r\n          setPlanName={setPlanName}\r\n          planSteps={steps}\r\n          setPlanSteps={setPlanSteps}\r\n        />\r\n      </div>\r\n      <BackButton\r\n        altText={'CANCEL'}\r\n        target='/home-page'\r\n        onClick={() => {\r\n          setPlanID(null);\r\n          setPlanName('');\r\n          setPlanSteps([]);\r\n        }}\r\n      />\r\n      <NextButton\r\n        altText={'SAVE PLAN'}\r\n        target='/home-page'\r\n        onClick={handleSave}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nNewPlanPage.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  steps: PropTypes.array.isRequired,\r\n  setPlanID: PropTypes.func.isRequired,\r\n  setPlanName: PropTypes.func.isRequired,\r\n  setPlanSteps: PropTypes.func.isRequired,\r\n  addPlan: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: state.plan.name,\r\n  steps: state.plan.steps,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  addPlan,\r\n})(NewPlanPage);\r\n","import React, { useEffect } from 'react';\r\nimport PlanEditor from '../components/plans/PlanEditor';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  updatePlan,\r\n} from '../actions/WorkoutPlanActions';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\nimport NextButton from '../components/layout/nextButton/NextButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditPlanPage = ({\r\n  id,\r\n  name,\r\n  steps,\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  updatePlan,\r\n}) => {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (id === null) {\r\n      history.push('/plans');\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSave = (e) => {\r\n    const checkValidInput = () => {\r\n      for (const step of steps) {\r\n        if (\r\n          isNaN(step.reps) ||\r\n          isNaN(step.sets) ||\r\n          isNaN(step.setRest) ||\r\n          isNaN(step.workoutRest)\r\n        )\r\n          return false;\r\n        if (step.reps <= 0 || step.sets <= 0) return false;\r\n        if (step.setRest < 0 || step.workoutRest < 0) return false;\r\n      }\r\n      return true;\r\n    };\r\n    const isValidInput = checkValidInput();\r\n    if (name.length > 0 && steps.length > 0 && isValidInput) {\r\n      updatePlan(id, {\r\n        name: name,\r\n        steps: steps.map(({ _id, ...rest }) => rest),\r\n      });\r\n      setPlanID(null);\r\n      setPlanSteps([]);\r\n      setPlanName('');\r\n    } else {\r\n      if (name.length <= 0) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please enter a plan name...' });\r\n      }\r\n      if (steps.length <= 0) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please add at least one step...' });\r\n      }\r\n      if (!isValidInput) {\r\n        e.preventDefault();\r\n        M.toast({ html: 'Please provide valid reps, sets, and rest times...' });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <h1 className='instructionsHeader'>Edit Workout Plan</h1>\r\n        <PlanEditor\r\n          planName={name}\r\n          setPlanName={setPlanName}\r\n          planSteps={steps}\r\n          setPlanSteps={setPlanSteps}\r\n        />\r\n      </div>\r\n      <BackButton\r\n        altText={'CANCEL'}\r\n        target='/plans'\r\n        onClick={() => {\r\n          setPlanID(null);\r\n          setPlanName('');\r\n          setPlanSteps([]);\r\n        }}\r\n      />\r\n      <NextButton altText={'SAVE PLAN'} target='/plans' onClick={handleSave} />\r\n    </>\r\n  );\r\n};\r\n\r\nEditPlanPage.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  steps: PropTypes.array.isRequired,\r\n  setPlanID: PropTypes.func.isRequired,\r\n  setPlanName: PropTypes.func.isRequired,\r\n  setPlanSteps: PropTypes.func.isRequired,\r\n  updatePlan: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id: state.plan.id,\r\n  name: state.plan.name,\r\n  steps: state.plan.steps,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n  updatePlan,\r\n})(EditPlanPage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './PlanPreview.css';\r\nimport { BenchPress } from '../../../img';\r\n\r\nconst PlanPreview = ({ steps, selectedWorkout }) => {\r\n  const [workoutImgs, setWorkoutImgs] = useState([]);\r\n\r\n  const getWorkoutImg = async (workoutID) => {\r\n    const res = await fetch('/workout/' + workoutID);\r\n    const data = await res.json();\r\n    return data.demo;\r\n  };\r\n\r\n  const getWorkoutImgArr = async (workoutIDs) => {\r\n    const imgs = await Promise.all(\r\n      workoutIDs.map(async (workoutID) => await getWorkoutImg(workoutID))\r\n    );\r\n    setWorkoutImgs(imgs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const workoutIDs = steps.map((step) => step.workout_id);\r\n    getWorkoutImgArr(workoutIDs);\r\n    //eslint-disable-next-line\r\n  }, [steps]);\r\n\r\n  return (\r\n    <div className='planPreview'>\r\n      {workoutImgs.map((img, index) => (\r\n        <div key={img + index} className='stepPreview'>\r\n          <img\r\n            className={selectedWorkout ? 'selectedWorkoutImg' : 'workoutImg'}\r\n            src={img}\r\n            alt='preview-img'\r\n          />\r\n        </div>\r\n      ))}\r\n      {selectedWorkout === null ? (\r\n        <div className='emptyStep'>\r\n          <img src={BenchPress} alt='placeholder-img' />\r\n          <div className='emptyStepIcon'>\r\n            <i className='material-icons'>add</i>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className='stepPreview'>\r\n          <img\r\n            className='selectedWorkoutImg selected'\r\n            src={selectedWorkout.demo}\r\n            alt='selected-img'\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPlanPreview.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  steps: state.plan.steps,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PlanPreview);\r\n","import {\r\n  SET_EQUIPMENT,\r\n  SET_SUB_MUSCLES,\r\n  SET_MUSCLE_GROUP,\r\n  GET_EQUIPMENT_OPTIONS,\r\n  SET_SELECTIONS_LOADING,\r\n  SELECTIONS_ERROR,\r\n} from './types';\r\n\r\nimport _ from 'lodash';\r\n\r\nexport const setEquipment = (equipment) => {\r\n  return {\r\n    type: SET_EQUIPMENT,\r\n    payload: equipment,\r\n  };\r\n};\r\n\r\nexport const setSubMuscles = (subMuscles) => {\r\n  return {\r\n    type: SET_SUB_MUSCLES,\r\n    payload: subMuscles,\r\n  };\r\n};\r\n\r\nexport const setMuscleGroup = (muscleGroup) => {\r\n  return {\r\n    type: SET_MUSCLE_GROUP,\r\n    payload: muscleGroup,\r\n  };\r\n};\r\n\r\nexport const getEquipmentOptions = (subMuscles) => async (dispatch) => {\r\n  try {\r\n    const snakeCaseStringify = (arr) => {\r\n      return arr.map((item) => _.snakeCase(item)).join('-');\r\n    };\r\n\r\n    const res = await fetch(\r\n      '/workout/equipment/' + snakeCaseStringify(subMuscles)\r\n    );\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_EQUIPMENT_OPTIONS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SELECTIONS_ERROR,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setSelectionsLoading = () => {\r\n  return {\r\n    type: SET_SELECTIONS_LOADING,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  setMuscleGroup,\r\n  setSubMuscles,\r\n  setEquipment,\r\n} from '../../../actions/WorkoutActions';\r\nimport { clearWorkouts } from '../../../actions/GeneratedWorkoutsActions';\r\nimport { Back, Front, Side, Legs, Arms, Abs } from '../../../img/index';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './MuscleGroupSelector.css';\r\n\r\nconst MuscleGroupSelector = ({\r\n  muscleGroup,\r\n  setMuscleGroup,\r\n  setSubMuscles,\r\n  setEquipment,\r\n  clearWorkouts,\r\n}) => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  const muscleGroups = ['CHEST', 'BACK', 'SHOULDERS', 'ABS', 'LEGS', 'ARMS'];\r\n  const muscleGroupImgs = [Front, Back, Side, Abs, Legs, Arms];\r\n\r\n  useEffect(() => {\r\n    var instance = document.querySelectorAll('.carousel');\r\n    M.Carousel.init(instance, {\r\n      indicators: true,\r\n      onCycleTo: (e) => {\r\n        setMuscleGroup(e.id);\r\n        setSubMuscles([]);\r\n        setEquipment([]);\r\n        clearWorkouts();\r\n      },\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [windowSize]);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h4 className='instructionsSubHeader'>{muscleGroup}</h4>\r\n      <div\r\n        className='carousel'\r\n        style={{ marginTop: windowSize.height < 850 && '-3rem' }}\r\n      >\r\n        {muscleGroups.map((muscle, index) => (\r\n          <div className='carousel-item' id={muscle} key={muscle}>\r\n            <img src={muscleGroupImgs[index]} alt={muscle + '-img'} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMuscleGroupSelector.propTypes = {\r\n  muscleGroup: PropTypes.string.isRequired,\r\n  setMuscleGroup: PropTypes.func.isRequired,\r\n  setSubMuscles: PropTypes.func.isRequired,\r\n  setEquipment: PropTypes.func.isRequired,\r\n  clearWorkouts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  muscleGroup: state.workout.muscleGroup,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setMuscleGroup,\r\n  setSubMuscles,\r\n  setEquipment,\r\n  clearWorkouts,\r\n})(MuscleGroupSelector);\r\n","import {\r\n  GET_WORKOUTS,\r\n  CLEAR_WORKOUTS,\r\n  SHUFFLE_WORKOUTS,\r\n  WORKOUTS_ERROR,\r\n  SET_WORKOUTS_LOADING,\r\n} from './types';\r\n\r\nimport _ from 'lodash';\r\n\r\nexport const getWorkouts = (workout) => async (dispatch) => {\r\n  try {\r\n    const snakeCaseStringify = (arr) => {\r\n      return arr.map((item) => _.snakeCase(item)).join('-');\r\n    };\r\n\r\n    const res = await fetch(\r\n      '/workout/workouts/' +\r\n        snakeCaseStringify(workout.subMuscles) +\r\n        '&' +\r\n        snakeCaseStringify(workout.equipment)\r\n    );\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_WORKOUTS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: WORKOUTS_ERROR,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearWorkouts = () => {\r\n  return {\r\n    type: CLEAR_WORKOUTS,\r\n  };\r\n};\r\n\r\nexport const shuffleWorkouts = () => {\r\n  return {\r\n    type: SHUFFLE_WORKOUTS,\r\n  };\r\n};\r\n\r\nexport const setWorkoutsLoading = () => {\r\n  return {\r\n    type: SET_WORKOUTS_LOADING,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport MuscleGroupSelector from '../components/selectors/muscles/MuscleGroupSelector';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\nimport NextButton from '../components/layout/nextButton/NextButton';\r\n\r\nconst MuscleGroupSelectionPage = ({ isNested, getNextSelector }) => {\r\n  const handleNext = (e) => {\r\n    if (isNested) {\r\n      e.preventDefault();\r\n      getNextSelector();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className='instructionsHeader'>Select a muscle group to begin</h1>\r\n      <MuscleGroupSelector />\r\n      {!isNested && <BackButton target='/home-page' />}\r\n      <NextButton target={'/sub-muscle-selection'} onClick={handleNext} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MuscleGroupSelectionPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setSubMuscles } from '../../../actions/WorkoutActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './SubMuscleButton.css';\r\n\r\nconst SubMuscleButton = ({ subMuscles, subMuscle, img, setSubMuscles }) => {\r\n  const [selected, setSelected] = useState(subMuscles.includes(subMuscle));\r\n\r\n  useEffect(() => {\r\n    var elems = document.querySelectorAll('.tooltipped');\r\n    M.Tooltip.init(elems, { position: 'top' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelected(subMuscles.includes(subMuscle));\r\n    // eslint-disable-next-line\r\n  }, [subMuscles]);\r\n\r\n  const handleSelect = () => {\r\n    const newSelected = !selected;\r\n    if (newSelected) {\r\n      if (!subMuscles.includes(subMuscle))\r\n        setSubMuscles([...subMuscles, subMuscle]);\r\n    } else {\r\n      setSubMuscles(subMuscles.filter((muscle) => muscle !== subMuscle));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  return (\r\n    <div className='subMuscleBtnDiv'>\r\n      <img\r\n        className='subMuscleImgBtn tooltipped'\r\n        style={{\r\n          opacity: selected ? '1' : '.5',\r\n          boxShadow: selected && '0px 0px 15px #26d1ed',\r\n        }}\r\n        src={img}\r\n        alt='test-img'\r\n        data-tooltip={subMuscle}\r\n        onClick={() => handleSelect()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubMuscleButton.propTypes = {\r\n  subMuscle: PropTypes.string.isRequired,\r\n  subMuscles: PropTypes.array.isRequired,\r\n  setSubMuscles: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  subMuscles: state.workout.subMuscles,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSubMuscles })(SubMuscleButton);\r\n","import React, { useEffect } from 'react';\r\nimport './PrimaryButton.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst PrimaryButton = ({ onClick, tooltipText, materialIcon, isNested }) => {\r\n  useEffect(() => {\r\n    var instance = document.querySelectorAll('.tooltipped');\r\n    instance.forEach((tooltip) => {\r\n      M.Tooltip.init(tooltip, {});\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{ bottom: isNested && '16%' }}\r\n      className='primaryBtn tooltipped btn-flat'\r\n      data-tooltip={tooltipText}\r\n      data-position={isNested ? 'top' : 'left'}\r\n      onClick={onClick}\r\n    >\r\n      <i className='material-icons'>{materialIcon}</i>\r\n    </div>\r\n  );\r\n};\r\n\r\nPrimaryButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  tooltipText: PropTypes.string.isRequired,\r\n  materialIcon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React from 'react';\r\nimport './SecondaryButton.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecondaryButton = ({ onClick, tooltipText, materialIcon, isNested }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        bottom: isNested && 'calc(16%)',\r\n        right: isNested && 'calc(5% + 4.1rem)',\r\n      }}\r\n      className='secondaryBtn tooltipped btn-flat'\r\n      data-tooltip={tooltipText}\r\n      data-position={isNested ? 'top' : 'left'}\r\n      onClick={onClick}\r\n    >\r\n      <i className='material-icons'>{materialIcon}</i>\r\n    </div>\r\n  );\r\n};\r\n\r\nSecondaryButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  tooltipText: PropTypes.string.isRequired,\r\n  materialIcon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SecondaryButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport SubMuscleButton from '../../layout/subMuscleButton/SubMuscleButton';\r\nimport { setSubMuscles } from '../../../actions/WorkoutActions';\r\nimport PrimaryButton from '../../layout/primaryButton/PrimaryButton';\r\nimport SecondaryButton from '../../layout/secondaryButton/SecondaryButton';\r\nimport {\r\n  ClavicularPectoral,\r\n  CostalPectoral,\r\n  SternalPectoral,\r\n  LatissimusDorsi,\r\n  ErectorSpinae,\r\n  Rhomboids,\r\n  TeresMajorAndMinor,\r\n  Trapezius,\r\n  AnteriorDeltoidHead,\r\n  LateralDeltoidHead,\r\n  PosteriorDeltoidHead,\r\n  RotatorCuff,\r\n  ExternalAbdominalOblique,\r\n  InternalAbdominalOblique,\r\n  UpperRectusAbdominis,\r\n  Serratus,\r\n  LowerRectusAbdominis,\r\n  Brachialis,\r\n  Forearms,\r\n  LateralTricepHead,\r\n  LongBicepHead,\r\n  LongTricepHead,\r\n  MedialTricepHead,\r\n  ShortBicepHead,\r\n  Gastrocnemius,\r\n  GluteusMaximus,\r\n  Hamstrings,\r\n  HipAbductors,\r\n  HipAdductors,\r\n  VastusLateralisAndRectusFemoris,\r\n  VastusMedialis,\r\n} from '../../../img/index';\r\nimport './SubMuscleSelector.css';\r\n\r\nconst SubMuscleSelector = ({\r\n  workout: { muscleGroup },\r\n  setSubMuscles,\r\n  isNested,\r\n}) => {\r\n  const [subMuscleOptions, setSubMuscleOptions] = useState([]);\r\n  const [subMuscleOptionRows, setSubMuscleOptionRows] = useState([]);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  const makeRows = () => {\r\n    if (windowSize.width >= 992) {\r\n      let rows = [];\r\n      let i = 0;\r\n      rows.push(subMuscleOptions.slice(i, i + 3));\r\n      while (i + 3 < subMuscleOptions.length) {\r\n        i += 3;\r\n        rows.push(subMuscleOptions.slice(i, i + 3));\r\n      }\r\n      setSubMuscleOptionRows(rows);\r\n    } else {\r\n      let rows = [];\r\n      let i = 0;\r\n      rows.push(subMuscleOptions.slice(i, i + 2));\r\n      while (i + 2 < subMuscleOptions.length) {\r\n        i += 2;\r\n        rows.push(subMuscleOptions.slice(i, i + 2));\r\n      }\r\n      setSubMuscleOptionRows(rows);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    switch (muscleGroup) {\r\n      case 'CHEST':\r\n        setSubMuscleOptions([\r\n          { name: 'Clavicular Pectoral', img: ClavicularPectoral },\r\n          { name: 'Costal Pectoral', img: SternalPectoral },\r\n          { name: 'Sternal Pectoral', img: CostalPectoral },\r\n        ]);\r\n        break;\r\n      case 'SHOULDERS':\r\n        setSubMuscleOptions([\r\n          { name: 'Anterior Deltoid Head', img: AnteriorDeltoidHead },\r\n          { name: 'Lateral Deltoid Head', img: LateralDeltoidHead },\r\n          { name: 'Posterior Deltoid Head', img: PosteriorDeltoidHead },\r\n          { name: 'Rotator Cuff', img: RotatorCuff },\r\n        ]);\r\n        break;\r\n      case 'BACK':\r\n        setSubMuscleOptions([\r\n          { name: 'Latissimus Dorsi', img: LatissimusDorsi },\r\n          { name: 'Rhomboids', img: Rhomboids },\r\n          { name: 'Teres Major And Minor', img: TeresMajorAndMinor },\r\n          { name: 'Erector Spinae', img: ErectorSpinae },\r\n          { name: 'Trapezius', img: Trapezius },\r\n        ]);\r\n        break;\r\n      case 'LEGS':\r\n        setSubMuscleOptions([\r\n          { name: 'Gluteus Maximus', img: GluteusMaximus },\r\n          { name: 'Vastus Medialis', img: VastusMedialis },\r\n          {\r\n            name: 'Vastus Lateralis And Rectus Femoris',\r\n            img: VastusLateralisAndRectusFemoris,\r\n          },\r\n          { name: 'Hamstrings', img: Hamstrings },\r\n          { name: 'Gastrocnemius', img: Gastrocnemius },\r\n          { name: 'Hip Abductors', img: HipAbductors },\r\n          { name: 'Hip Adductors', img: HipAdductors },\r\n        ]);\r\n        break;\r\n      case 'ABS':\r\n        setSubMuscleOptions([\r\n          { name: 'Internal Abdominal Oblique', img: InternalAbdominalOblique },\r\n          { name: 'External Abdominal Oblique', img: ExternalAbdominalOblique },\r\n          { name: 'Upper Rectus Abdominis', img: UpperRectusAbdominis },\r\n          { name: 'Lower Rectus Abdominis', img: LowerRectusAbdominis },\r\n          { name: 'Serratus', img: Serratus },\r\n        ]);\r\n        break;\r\n      case 'ARMS':\r\n        setSubMuscleOptions([\r\n          { name: 'Short Bicep Head', img: ShortBicepHead },\r\n          { name: 'Long Bicep Head', img: LongBicepHead },\r\n          { name: 'Brachialis', img: Brachialis },\r\n          { name: 'Forearms', img: Forearms },\r\n          { name: 'Long Tricep Head', img: LongTricepHead },\r\n          { name: 'Medial Tricep Head', img: MedialTricepHead },\r\n          { name: 'Lateral Tricep Head', img: LateralTricepHead },\r\n        ]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [muscleGroup]);\r\n\r\n  useEffect(() => {\r\n    makeRows();\r\n    // eslint-disable-next-line\r\n  }, [windowSize]);\r\n\r\n  return (\r\n    <div className='subMuscleBtnsContainer container'>\r\n      {subMuscleOptionRows.map((row, rowIndex) => (\r\n        <div className='subMuscleBtnRow' key={rowIndex}>\r\n          {row.map((subMuscle) => (\r\n            <SubMuscleButton\r\n              subMuscle={subMuscle.name}\r\n              img={subMuscle.img}\r\n              key={subMuscle.name}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <SecondaryButton\r\n        tooltipText='Clear All'\r\n        materialIcon='clear'\r\n        onClick={() => {\r\n          setSubMuscles([]);\r\n        }}\r\n        isNested={isNested}\r\n      />\r\n      <PrimaryButton\r\n        tooltipText='Select All'\r\n        materialIcon='clear_all'\r\n        onClick={() => {\r\n          setSubMuscles(\r\n            subMuscleOptions.map((subMuscleOption) => subMuscleOption.name)\r\n          );\r\n        }}\r\n        isNested={isNested}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubMuscleSelector.propTypes = {\r\n  workout: PropTypes.object.isRequired,\r\n  setSubMuscles: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  workout: state.workout,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSubMuscles })(SubMuscleSelector);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport SubMuscleSelector from '../components/selectors/subMuscles/SubMuscleSelector.js';\r\nimport NextButton from '../components/layout/nextButton/NextButton';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\n\r\nconst SubMuscleSelectionPage = ({\r\n  subMuscles,\r\n  isNested,\r\n  getPreviousSelector,\r\n  getNextSelector,\r\n}) => {\r\n  const handleBack = (e) => {\r\n    if (isNested) {\r\n      e.preventDefault();\r\n      getPreviousSelector();\r\n    }\r\n  };\r\n  const handleNext = (e) => {\r\n    if (subMuscles.length === 0) {\r\n      e.preventDefault();\r\n      M.toast({ html: 'Please select target muscles.' });\r\n    } else if (isNested) {\r\n      e.preventDefault();\r\n      getNextSelector();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className='instructionsHeader'>Target muscles</h1>\r\n      <SubMuscleSelector isNested={isNested} />\r\n      <BackButton\r\n        isNested={isNested}\r\n        target='/muscle-group-selection'\r\n        onClick={handleBack}\r\n      />\r\n      <NextButton target='/equipment-selection' onClick={handleNext} />\r\n    </>\r\n  );\r\n};\r\n\r\nSubMuscleSelectionPage.propTypes = {\r\n  subMuscles: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  subMuscles: state.workout.subMuscles,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(SubMuscleSelectionPage);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEquipment } from '../../../actions/WorkoutActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './EquipmentButton.css';\r\n\r\nconst EquipmentButton = ({ equipment, equipmentItem, img, setEquipment }) => {\r\n  const [selected, setSelected] = useState(equipment.includes(equipmentItem));\r\n\r\n  useEffect(() => {\r\n    var elems = document.querySelectorAll('.tooltipped');\r\n    M.Tooltip.init(elems, { position: 'top' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelected(equipment.includes(equipmentItem));\r\n    // eslint-disable-next-line\r\n  }, [equipment]);\r\n\r\n  const handleSelect = () => {\r\n    const newSelected = !selected;\r\n    if (newSelected) {\r\n      if (!equipment.includes(equipmentItem))\r\n        setEquipment([...equipment, equipmentItem]);\r\n    } else {\r\n      setEquipment(\r\n        equipment.filter((equipment) => equipment !== equipmentItem)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  return (\r\n    <div className='equipmentBtnDiv'>\r\n      <img\r\n        className='equipmentImgBtn tooltipped'\r\n        style={{\r\n          opacity: selected ? '1' : '.5',\r\n          boxShadow: selected && '0px 0px 15px #26d1ed',\r\n        }}\r\n        src={img}\r\n        alt='test-img'\r\n        data-tooltip={equipmentItem}\r\n        data-position='top'\r\n        onClick={() => handleSelect()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEquipmentButton.propTypes = {\r\n  equipmentItem: PropTypes.string.isRequired,\r\n  equipment: PropTypes.array.isRequired,\r\n  setEquipment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  equipment: state.workout.equipment,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setEquipment })(EquipmentButton);\r\n","import React, { useState, useEffect } from 'react';\r\nimport EquipmentButton from '../../layout/equipmentButton/EquipmentButton';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Preloader from '../../layout/Preloader';\r\nimport {\r\n  setEquipment,\r\n  getEquipmentOptions,\r\n  setSelectionsLoading,\r\n} from '../../../actions/WorkoutActions';\r\nimport {\r\n  BenchPress,\r\n  Dumbbells,\r\n  SmithMachine,\r\n  ChestPressMachine,\r\n  DipStation,\r\n  T_BAR,\r\n  CableMachine,\r\n  ButterflyMachine,\r\n  // BattleRopes,\r\n  SuspensionTrainer,\r\n  Barbell,\r\n  Pull_UpBar,\r\n  CableRowMachine,\r\n  PulldownMachine,\r\n  RomanChair,\r\n  RearFlyMachine,\r\n  OverheadPressMachine,\r\n  CrunchMachine,\r\n  // AdjustableBench,\r\n  MedicineBall,\r\n  AbRoller,\r\n  HexBar,\r\n  Kettlebell,\r\n  LegCurlMachine,\r\n  KickbackMachine,\r\n  LegExtensionMachine,\r\n  LegPressMachine,\r\n  Sled,\r\n  // JumpRope,\r\n  BicepCurlMachine,\r\n  CalfRaiseMachine,\r\n  TricepExtension,\r\n  HighRowMachine,\r\n  LowRowMachine,\r\n  LateralRaiseMachine,\r\n  CalfExtensionMachine,\r\n  SquatMachine,\r\n  TricepBar,\r\n  ObliqueCrunchMachine,\r\n  ProneLegCurlMachine,\r\n  HackSquatMachine,\r\n  LegRaiseStation,\r\n  NoEquipment,\r\n  AbductionMachine,\r\n  AdductionMachine,\r\n} from '../../../img/index';\r\nimport SecondaryButton from '../../layout/secondaryButton/SecondaryButton';\r\nimport PrimaryButton from '../../layout/primaryButton/PrimaryButton';\r\nimport './EquipmentSelector.css';\r\n\r\nconst images = {};\r\nimages['Bench Press'] = BenchPress;\r\nimages['Dumbbells'] = Dumbbells;\r\nimages['Smith Machine'] = SmithMachine;\r\nimages['Chest Press Machine'] = ChestPressMachine;\r\nimages['Dip Station'] = DipStation;\r\nimages['T Bar'] = T_BAR;\r\nimages['Cable Machine'] = CableMachine;\r\nimages['Butterfly Machine'] = ButterflyMachine;\r\nimages['Suspension Trainer'] = SuspensionTrainer;\r\nimages['Barbell'] = Barbell;\r\nimages['Pull Up Bar'] = Pull_UpBar;\r\nimages['Cable Row Machine'] = CableRowMachine;\r\nimages['Pulldown Machine'] = PulldownMachine;\r\nimages['Roman Chair'] = RomanChair;\r\nimages['Rear Fly Machine'] = RearFlyMachine;\r\nimages['Overhead Press Machine'] = OverheadPressMachine;\r\nimages['Crunch Machine'] = CrunchMachine;\r\nimages['Medicine Ball'] = MedicineBall;\r\nimages['Ab Roller'] = AbRoller;\r\nimages['Hex Bar'] = HexBar;\r\nimages['Kettlebell'] = Kettlebell;\r\nimages['Leg Curl Machine'] = LegCurlMachine;\r\nimages['Kickback Machine'] = KickbackMachine;\r\nimages['Leg Extension Machine'] = LegExtensionMachine;\r\nimages['Leg Press Machine'] = LegPressMachine;\r\nimages['Sled'] = Sled;\r\nimages['Bicep Curl Machine'] = BicepCurlMachine;\r\nimages['Calf Raise Machine'] = CalfRaiseMachine;\r\nimages['Tricep Extension Machine'] = TricepExtension;\r\nimages['High Row Machine'] = HighRowMachine;\r\nimages['Low Row Machine'] = LowRowMachine;\r\nimages['Lateral Raise Machine'] = LateralRaiseMachine;\r\nimages['Calf Extension Machine'] = CalfExtensionMachine;\r\nimages['Squat Machine'] = SquatMachine;\r\nimages['Hack Squat Machine'] = HackSquatMachine;\r\nimages['Tricep Bar'] = TricepBar;\r\nimages['Oblique Crunch Machine'] = ObliqueCrunchMachine;\r\nimages['Prone Leg Curl Machine'] = ProneLegCurlMachine;\r\nimages['Leg Raise Station'] = LegRaiseStation;\r\nimages['No Equipment'] = NoEquipment;\r\nimages['Abduction Machine'] = AbductionMachine;\r\nimages['Adduction Machine'] = AdductionMachine;\r\n\r\nconst EquipmentSelector = ({\r\n  subMuscles,\r\n  equipmentOptions,\r\n  loading,\r\n  setEquipment,\r\n  getEquipmentOptions,\r\n  setSelectionsLoading,\r\n  isNested,\r\n}) => {\r\n  const [equipmentOptionRows, setEquipmentOptionRows] = useState([]);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  const makeRows = () => {\r\n    if (equipmentOptions) {\r\n      if (windowSize.width >= 992) {\r\n        let rows = [];\r\n        let i = 0;\r\n        rows.push(equipmentOptions.slice(i, i + 3));\r\n        while (i + 3 < equipmentOptions.length) {\r\n          i += 3;\r\n          rows.push(equipmentOptions.slice(i, i + 3));\r\n        }\r\n        setEquipmentOptionRows(rows);\r\n      } else {\r\n        let rows = [];\r\n        let i = 0;\r\n        rows.push(equipmentOptions.slice(i, i + 2));\r\n        while (i + 2 < equipmentOptions.length) {\r\n          i += 2;\r\n          rows.push(equipmentOptions.slice(i, i + 2));\r\n        }\r\n        setEquipmentOptionRows(rows);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectionsLoading();\r\n    getEquipmentOptions(subMuscles);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    makeRows();\r\n    // eslint-disable-next-line\r\n  }, [windowSize, equipmentOptions]);\r\n\r\n  if (loading) return <Preloader />;\r\n  return (\r\n    <div className='equipmentBtnsContainer container'>\r\n      {equipmentOptionRows.map((row, rowIndex) => (\r\n        <div className='equipmentBtnRow' key={rowIndex}>\r\n          {row.map((equipmentItem, index) => (\r\n            <EquipmentButton\r\n              equipmentItem={equipmentItem}\r\n              img={images[equipmentItem]}\r\n              key={index}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <SecondaryButton\r\n        tooltipText='Clear All'\r\n        materialIcon='clear'\r\n        onClick={() => setEquipment([])}\r\n        isNested={isNested}\r\n      />\r\n      <PrimaryButton\r\n        tooltipText='Select All'\r\n        materialIcon='clear_all'\r\n        onClick={() =>\r\n          setEquipment(equipmentOptions.map((equipmentItem) => equipmentItem))\r\n        }\r\n        isNested={isNested}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEquipmentSelector.propTypes = {\r\n  muscleGroup: PropTypes.string.isRequired,\r\n  subMuscles: PropTypes.array.isRequired,\r\n  equipmentOptions: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  setEquipment: PropTypes.func.isRequired,\r\n  getEquipmentOptions: PropTypes.func.isRequired,\r\n  setSelectionsLoading: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  muscleGroup: state.workout.muscleGroup,\r\n  subMuscles: state.workout.subMuscles,\r\n  equipmentOptions: state.workout.equipmentOptions,\r\n  loading: state.workout.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setEquipment,\r\n  getEquipmentOptions,\r\n  setSelectionsLoading,\r\n})(EquipmentSelector);\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport EquipmentSelector from '../components/selectors/equipment/EquipmentSelector';\r\nimport NextButton from '../components/layout/nextButton/NextButton';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\n\r\nconst EquipmentSelectionPage = ({\r\n  muscleGroup,\r\n  equipment,\r\n  loading,\r\n  isNested,\r\n  getPreviousSelector,\r\n  getNextSelector,\r\n}) => {\r\n  const handleBack = (e) => {\r\n    if (isNested) {\r\n      e.preventDefault();\r\n      getPreviousSelector();\r\n    }\r\n  };\r\n\r\n  const handleNext = (e) => {\r\n    if (equipment.length <= 0) {\r\n      e.preventDefault();\r\n      M.toast({ html: 'Please select equipment.' });\r\n    } else if (isNested) {\r\n      e.preventDefault();\r\n      getNextSelector();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='instructionsHeader'>\r\n        Select {_.lowerCase(muscleGroup)} equipment\r\n      </h1>\r\n      <EquipmentSelector isNested={isNested} />\r\n      {!loading && (\r\n        <>\r\n          <BackButton\r\n            target='/sub-muscle-selection'\r\n            onClick={handleBack}\r\n            isNested={isNested}\r\n          />\r\n          <NextButton\r\n            target='/workouts'\r\n            onClick={handleNext}\r\n            isNested={isNested}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nEquipmentSelectionPage.propTypes = {\r\n  muscleGroup: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  muscleGroup: state.workout.muscleGroup,\r\n  equipment: state.workout.equipment,\r\n  loading: state.workout.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(EquipmentSelectionPage);\r\n","import React from 'react';\r\nimport './WorkoutCard.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst WorkoutCard = ({ workout, setSelectedWorkout }) => {\r\n  return (\r\n    <div className='cardContainer'>\r\n      <div\r\n        className='card'\r\n        onClick={() => {\r\n          if (setSelectedWorkout) setSelectedWorkout(workout);\r\n        }}\r\n      >\r\n        <div className='card-image waves-effect waves-block waves-light cardImg'>\r\n          <img\r\n            className='activator'\r\n            rel={'external'}\r\n            src={workout.demo}\r\n            alt='card-img'\r\n          />\r\n        </div>\r\n        <div className='card-content'>\r\n          <span className='card-title activator'>\r\n            {workout.name}\r\n            <i className='material-icons right'>more_vert</i>\r\n          </span>\r\n        </div>\r\n        <div className='card-reveal'>\r\n          <span className='card-title'>\r\n            {workout.name}\r\n            <i className='material-icons right'>close</i>\r\n          </span>\r\n          <div className='left-align revealContent'>\r\n            {workout.tips.length > 0 && (\r\n              <>\r\n                <blockquote className='revealSubHeader'>Tips:</blockquote>\r\n                <ul className='revealList browser-default'>\r\n                  {workout.tips.map((tip, index) => (\r\n                    <li key={index}>{tip}</li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n            <br />\r\n            <blockquote className='revealSubHeader'>Target Muscles:</blockquote>\r\n            <ul className='revealList browser-default'>\r\n              {workout.targets.map((target, index) => (\r\n                <li key={index}>{target}</li>\r\n              ))}\r\n            </ul>\r\n            <br />\r\n            {workout.tangents.length > 0 && (\r\n              <>\r\n                <blockquote className='revealSubHeader'>\r\n                  Tangent Muscles Worked:\r\n                </blockquote>\r\n                <ul className='revealList browser-default'>\r\n                  {workout.tangents.map((tangent, index) => (\r\n                    <li key={index}>{tangent}</li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nWorkoutCard.propTypes = {\r\n  workout: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default WorkoutCard;\r\n","import React from 'react';\r\nimport './RestartButton.css';\r\n\r\nconst RestartButton = () => {\r\n  return (\r\n    <div className='restartButtonContainer'>\r\n      <a href='/muscle-group-selection' className='restartButton'>\r\n        START NEW\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestartButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport WorkoutCard from '../../components/layout/workoutCard/WorkoutCard';\r\nimport RestartButton from '../../components/layout/restartButton/RestartButton';\r\nimport PrimaryButton from '../../components/layout/primaryButton/PrimaryButton';\r\nimport BackButton from '../../components/layout/backButton/BackButton';\r\nimport NextButton from '../../components/layout/nextButton/NextButton';\r\nimport Preloader from '../../components/layout/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getWorkouts,\r\n  setWorkoutsLoading,\r\n  shuffleWorkouts,\r\n} from '../../actions/GeneratedWorkoutsActions';\r\nimport './GeneratedWorkoutsPage.css';\r\n\r\nconst GeneratedWorkoutsPage = ({\r\n  workout,\r\n  generatedWorkouts: { workouts, loading },\r\n  getWorkouts,\r\n  setWorkoutsLoading,\r\n  shuffleWorkouts,\r\n  isNested,\r\n  getPreviousSelector,\r\n  getNextSelector,\r\n  setSelectedWorkout,\r\n}) => {\r\n  const [cardRows, setCardRows] = useState([]);\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  const makeRows = () => {\r\n    var size = windowSize.width >= 992 ? 2 : 1;\r\n    var rows = [];\r\n    for (let i = 0; i < workouts.length; i += size) {\r\n      rows.push(workouts.slice(i, i + size));\r\n    }\r\n    setCardRows(rows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWorkoutsLoading();\r\n    getWorkouts(workout);\r\n\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    makeRows();\r\n    return () => window.removeEventListener('resize', handleResize);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    makeRows();\r\n    // eslint-disable-next-line\r\n  }, [workouts, windowSize]);\r\n\r\n  return (\r\n    <>\r\n      <div className='container workoutCardsContainer'>\r\n        <h1 className='instructionsHeader'>Generated Workouts</h1>\r\n        {loading || workouts === null ? (\r\n          <Preloader />\r\n        ) : (\r\n          cardRows.map((row, rowIndex) => (\r\n            <div className='row' key={rowIndex}>\r\n              {row.map((workoutItem) => (\r\n                <div\r\n                  className={\r\n                    'col s12 l6' +\r\n                    (row.length === 1 && rowIndex === cardRows.length - 1\r\n                      ? ' offset-l3'\r\n                      : '')\r\n                  }\r\n                  key={workoutItem.name}\r\n                >\r\n                  <WorkoutCard\r\n                    workout={workoutItem}\r\n                    setSelectedWorkout={setSelectedWorkout}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      {!loading && workouts !== null && (\r\n        <>\r\n          {!isNested && <RestartButton />}\r\n          {isNested && (\r\n            <>\r\n              <BackButton onClick={getPreviousSelector} isNested={isNested} />\r\n              <NextButton\r\n                onClick={getNextSelector}\r\n                is\r\n                Nested={isNested}\r\n                altText='ADD STEP'\r\n              />\r\n            </>\r\n          )}\r\n          <PrimaryButton\r\n            tooltipText='Shuffle'\r\n            materialIcon='casino'\r\n            onClick={() => {\r\n              shuffleWorkouts();\r\n              makeRows();\r\n            }}\r\n            isNested={isNested}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  workout: state.workout,\r\n  generatedWorkouts: state.generatedWorkouts,\r\n});\r\n\r\nGeneratedWorkoutsPage.propTypes = {\r\n  generatedWorkouts: PropTypes.object.isRequired,\r\n  getWorkouts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getWorkouts,\r\n  setWorkoutsLoading,\r\n  shuffleWorkouts,\r\n})(GeneratedWorkoutsPage);\r\n","import React, { useState } from 'react';\r\nimport PlanPreview from '../components/layout/planPreview/PlanPreview';\r\nimport MuscleGroupSelectionPage from '../pages/MuscleGroupSelectionPage';\r\nimport SubMuscleSelectionPage from './SubMuscleSelectionPage';\r\nimport EquipmentSelectionPage from './EquipmentSelectionPage';\r\nimport GeneratedWorkoutsPage from './generatedWorkoutsPage/GeneratedWorkoutsPage';\r\nimport BackButton from '../components/layout/backButton/BackButton';\r\nimport { connect } from 'react-redux';\r\nimport { addPlanStep } from '../actions/WorkoutPlanActions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AddStepPage = ({ id, addPlanStep }) => {\r\n  let history = useHistory();\r\n  const [selectorIdx, setSelectorIdx] = useState(0);\r\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\r\n\r\n  const getPreviousSelector = () => {\r\n    setSelectorIdx(selectorIdx - 1 < 0 ? 0 : selectorIdx - 1);\r\n  };\r\n\r\n  const getNextSelector = () => {\r\n    if (selectorIdx + 1 >= selectors.length) {\r\n      addPlanStep({\r\n        reps: 12,\r\n        sets: 3,\r\n        setRest: 60,\r\n        workoutRest: 0,\r\n        workout_id: selectedWorkout._id,\r\n      });\r\n      if (id === null) history.push('/plan');\r\n      else history.push('/edit-plan');\r\n    }\r\n    setSelectorIdx(selectorIdx + 1);\r\n  };\r\n\r\n  const selectors = [\r\n    <MuscleGroupSelectionPage\r\n      isNested={true}\r\n      getNextSelector={getNextSelector}\r\n    />,\r\n    <SubMuscleSelectionPage\r\n      isNested={true}\r\n      getPreviousSelector={getPreviousSelector}\r\n      getNextSelector={getNextSelector}\r\n    />,\r\n    <EquipmentSelectionPage\r\n      isNested={true}\r\n      getPreviousSelector={getPreviousSelector}\r\n      getNextSelector={getNextSelector}\r\n    />,\r\n    <GeneratedWorkoutsPage\r\n      isNested={true}\r\n      getPreviousSelector={getPreviousSelector}\r\n      getNextSelector={getNextSelector}\r\n      setSelectedWorkout={setSelectedWorkout}\r\n    />,\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n          height: '86%',\r\n          overflowY: selectorIdx !== 0 ? 'auto' : 'hidden',\r\n        }}\r\n      >\r\n        {selectors[selectorIdx]}\r\n      </div>\r\n      <BackButton altText='CANCEL' target='/plan' />\r\n      <PlanPreview selectedWorkout={selectedWorkout} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id: state.plan.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPlanStep })(AddStepPage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport Preloader from '../Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './PlanActionCard.css';\r\n\r\nconst PlanActionCard = ({\r\n  plan,\r\n  deleteUserPlan,\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n}) => {\r\n  let history = useHistory();\r\n  const [workouts, setWorkouts] = useState([]);\r\n\r\n  const getWorkout = async (workoutID) => {\r\n    const res = await fetch('/workout/' + workoutID);\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const getWorkoutArr = async (workoutIDs) => {\r\n    const imgs = await Promise.all(\r\n      workoutIDs.map(async (workoutID) => await getWorkout(workoutID))\r\n    );\r\n    setWorkouts(imgs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var elems = document.querySelectorAll('.tooltipped');\r\n    M.Tooltip.init(elems, { position: 'bottom' });\r\n    return () => {\r\n      elems.forEach((elem) => {\r\n        var instance = M.Tooltip.getInstance(elem);\r\n        instance?.destroy();\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const workoutIDs = plan.steps.map((step) => step.workout_id);\r\n    getWorkoutArr(workoutIDs);\r\n    //eslint-disable-next-line\r\n  }, [plan]);\r\n\r\n  return (\r\n    <div className='planActionCard'>\r\n      {/* <div className='top'> */}\r\n      <h5 className='planName'>{plan.name}</h5>\r\n      <ul className='planActions'>\r\n        <li\r\n          className='tooltipped planAction'\r\n          data-tooltip='Run Plan Guide'\r\n          onClick={() => {\r\n            setPlanID(plan._id);\r\n            setPlanName(plan.name);\r\n            setPlanSteps(plan.steps);\r\n            history.push('/guide');\r\n          }}\r\n        >\r\n          <i className='material-icons'>play_circle_filled</i>\r\n        </li>\r\n        <li\r\n          className='tooltipped planAction'\r\n          data-tooltip='Edit Plan'\r\n          onClick={() => {\r\n            setPlanID(plan._id);\r\n            setPlanName(plan.name);\r\n            setPlanSteps(plan.steps);\r\n            history.push('/edit-plan');\r\n          }}\r\n        >\r\n          <i className='material-icons'>create</i>\r\n        </li>\r\n        <li\r\n          className='tooltipped planAction'\r\n          data-tooltip='Delete Plan'\r\n          onClick={() => deleteUserPlan(plan._id)}\r\n        >\r\n          <i className='material-icons'>delete</i>\r\n        </li>\r\n      </ul>\r\n      {/* </div> */}\r\n      {workouts.length <= 0 ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div className='stepPreviewContainer'>\r\n          {workouts.map((workout, index) => (\r\n            <div\r\n              key={index}\r\n              className='stepPreview stepPreviewDiv'\r\n              style={\r\n                index >= workouts.length || plan.steps[index].workoutRest <= 0\r\n                  ? {\r\n                      borderRight: 'none',\r\n                      paddingRight: '1.5rem',\r\n                      marginRight: '0',\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              <img\r\n                className='cardWorkoutImg'\r\n                src={workout.demo}\r\n                alt='workout-img'\r\n              />\r\n              {index < workouts.length && plan.steps[index].workoutRest > 0 && (\r\n                <p className='workoutRest'>{plan.steps[index].workoutRest}s</p>\r\n              )}\r\n              <p className='stepDetails'>\r\n                {plan.steps[index].reps}\r\n                <span className='units'> reps</span> {plan.steps[index].sets}\r\n                <span className='units'> sets</span>\r\n                <br />\r\n                {plan.steps[index].setRest}s <span className='units'>rest</span>\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPlanActionCard.propTypes = {\r\n  plan: PropTypes.object.isRequired,\r\n  deleteUserPlan: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PlanActionCard;\r\n","import React, { useEffect } from 'react';\r\nimport PlanActionCard from '../../components/layout/planActionCard/PlanActionCard';\r\nimport BackButton from '../../components/layout/backButton/BackButton';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getUserPlans, deleteUserPlan } from '../../actions/UserActions';\r\nimport {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n} from '../../actions/WorkoutPlanActions';\r\nimport './UsePlansPage.css';\r\n\r\nconst UsePlansPage = ({\r\n  currUser,\r\n  currUserPlans,\r\n  getUserPlans,\r\n  deleteUserPlan,\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n}) => {\r\n  useEffect(() => {\r\n    getUserPlans();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <h1 className='usePlanHeader'>\r\n          <span className='userName'>{currUser.name}'s</span> Workout Plans\r\n        </h1>\r\n        {currUserPlans.map((plan) => (\r\n          <PlanActionCard\r\n            key={plan._id}\r\n            plan={plan}\r\n            deleteUserPlan={deleteUserPlan}\r\n            setPlanID={setPlanID}\r\n            setPlanName={setPlanName}\r\n            setPlanSteps={setPlanSteps}\r\n          />\r\n        ))}\r\n        {currUserPlans.length <= 0 && (\r\n          <>\r\n            <h3 className='usePlanSubHeader'>No plans yet...</h3>\r\n            <a className='addPlanBtn' href='/plan'>\r\n              + ADD WORKOUT PLAN\r\n            </a>\r\n          </>\r\n        )}\r\n      </div>\r\n      <BackButton altText={'HOME'} target='/home-page' />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currUser: state.user.currUser,\r\n  currUserPlans: state.user.currUserPlans,\r\n});\r\n\r\nUsePlansPage.propTypes = {\r\n  currUser: PropTypes.object.isRequired,\r\n  currUserPlans: PropTypes.array.isRequired,\r\n  getUserPlans: PropTypes.func.isRequired,\r\n  deleteUserPlan: PropTypes.func.isRequired,\r\n  setPlanID: PropTypes.func.isRequired,\r\n  setPlanName: PropTypes.func.isRequired,\r\n  setPlanSteps: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserPlans,\r\n  deleteUserPlan,\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n})(UsePlansPage);\r\n","import React from 'react';\r\nimport WorkoutCard from '../workoutCard/WorkoutCard';\r\nimport PropTypes from 'prop-types';\r\nimport './GuideStep.css';\r\n\r\nconst GuideStep = ({ workout, step, currSet }) => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row guideStepDiv'>\r\n        <div className='col s12 m10 offset-m1 l8 offset-l2 xl6 offset-xl3'>\r\n          <WorkoutCard workout={workout} />\r\n          <p className='guideStepText'>\r\n            <span style={{ borderRight: '.1rem dotted grey' }}>\r\n              <span className='guideStepSubText'>set </span>\r\n              <sup>{currSet}</sup>&frasl;\r\n              <sub>{step.sets}</sub>{' '}\r\n            </span>\r\n            &nbsp;{step.reps} <span className='guideStepSubText'>reps</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuideStep.propTypes = {\r\n  workout: PropTypes.object.isRequired,\r\n  step: PropTypes.object.isRequired,\r\n  currSet: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default GuideStep;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './RestStep.css';\r\n\r\nconst RestCard = ({ count }) => {\r\n  return (\r\n    <div className='row'>\r\n      <div className='col s12 m10 offset-m1 l8 offset-l2 xl6 offset-xl3'>\r\n        <div className='restCard'>\r\n          <h1 className='restHeader'>REST</h1>\r\n          <p className={'restCount' + (count % 2 === 0 ? ' flashColor' : '')}>\r\n            {count}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRestCard.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default RestCard;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestCard from './RestCard';\r\nimport './RestStep.css';\r\n\r\nconst RestStep = ({ restTime, getNext }) => {\r\n  const timer = useRef(null);\r\n  const [count, setCount] = useState(restTime);\r\n  const [paused, setPaused] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!paused) startTimer();\r\n\r\n    return () => clearInterval(timer.current);\r\n  }, [paused]);\r\n\r\n  useEffect(() => {\r\n    if (count < 0) {\r\n      getNext();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [count]);\r\n\r\n  const startTimer = () => {\r\n    timer.current = setInterval(() => {\r\n      setCount((prevCount) => {\r\n        return prevCount - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(timer.current);\r\n  };\r\n\r\n  return (\r\n    <div className='container restStepDiv'>\r\n      <RestCard count={count > 0 ? count : 0} />\r\n      <i\r\n        className='playBtn material-icons medium'\r\n        onClick={() => {\r\n          if (paused) startTimer();\r\n          else stopTimer();\r\n          setPaused(!paused);\r\n        }}\r\n      >\r\n        {paused ? 'play_arrow' : 'pause'}\r\n      </i>\r\n    </div>\r\n  );\r\n};\r\n\r\nRestStep.propTypes = {\r\n  restTime: PropTypes.number.isRequired,\r\n  getNext: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RestStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GuideStep from '../../components/layout/guideStep/GuideStep';\r\nimport RestStep from '../../components/layout/restStep/RestStep';\r\nimport BackButton from '../../components/layout/backButton/BackButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n} from '../../actions/WorkoutPlanActions';\r\nimport './PlanGuidePage.css';\r\n\r\nconst PlanGuidePage = ({ plan, setPlanID, setPlanName, setPlanSteps }) => {\r\n  let history = useHistory();\r\n  const [workouts, setWorkouts] = useState([]);\r\n  const [currStepIdx, setCurrStepIdx] = useState(0);\r\n  const [isRest, setIsRest] = useState(false);\r\n  const [currSet, setCurrSet] = useState(1);\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (plan.id === null) history.push('/plans');\r\n    //eslint-disable-next-line\r\n  }, [plan]);\r\n  useEffect(() => {\r\n    if (finished) history.push('/plans');\r\n    //eslint-disable-next-line\r\n  }, [finished]);\r\n\r\n  const getWorkout = async (workoutID) => {\r\n    const res = await fetch('/workout/' + workoutID);\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  const getWorkoutArr = async (workoutIDs) => {\r\n    const imgs = await Promise.all(\r\n      workoutIDs.map(async (workoutID) => await getWorkout(workoutID))\r\n    );\r\n    setWorkouts(imgs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const workoutIDs = plan.steps.map((step) => step.workout_id);\r\n    getWorkoutArr(workoutIDs);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getContent = () => {\r\n    if (!isRest) {\r\n      return (\r\n        <GuideStep\r\n          workout={workouts[currStepIdx]}\r\n          step={plan.steps[currStepIdx]}\r\n          currSet={currSet}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <RestStep\r\n          restTime={\r\n            currSet < plan.steps[currStepIdx].sets\r\n              ? plan.steps[currStepIdx].setRest\r\n              : plan.steps[currStepIdx].workoutRest\r\n          }\r\n          getNext={getNext}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const getPreviewContent = () => {\r\n    if (!isRest) {\r\n      if (\r\n        currSet < plan.steps[currStepIdx].sets\r\n          ? plan.steps[currStepIdx].setRest > 0\r\n          : plan.steps[currStepIdx].workoutRest > 0\r\n      )\r\n        return (\r\n          <div className='restPreview'>\r\n            <div className='restPreviewText'>\r\n              {currSet < plan.steps[currStepIdx].sets\r\n                ? plan.steps[currStepIdx].setRest\r\n                : plan.steps[currStepIdx].workoutRest}\r\n              s\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    if (currSet < plan.steps[currStepIdx].sets)\r\n      return (\r\n        <img\r\n          src={workouts[currStepIdx].demo}\r\n          className='stepPreviewImg'\r\n          alt='step-preview-img'\r\n        />\r\n      );\r\n    else {\r\n      if (currStepIdx + 1 < plan.steps.length) {\r\n        return (\r\n          <img\r\n            src={workouts[currStepIdx + 1].demo}\r\n            className='stepPreviewImg'\r\n            alt='step-preview-img'\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <div className='restPreview'>\r\n            <div\r\n              className='restPreviewText'\r\n              style={{ fontSize: '2rem', paddingTop: 'calc(50% - 1.5rem)' }}\r\n            >\r\n              DONE!\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const getNext = () => {\r\n    if (\r\n      !isRest &&\r\n      (currSet < plan.steps[currStepIdx].sets\r\n        ? plan.steps[currStepIdx].setRest > 0\r\n        : plan.steps[currStepIdx].workoutRest > 0)\r\n    ) {\r\n      // go to rest\r\n      setIsRest(true);\r\n    } else {\r\n      setIsRest(false);\r\n      if (currSet >= plan.steps[currStepIdx].sets) {\r\n        //completed workout rest\r\n        if (currStepIdx + 1 >= plan.steps.length) setFinished(true);\r\n        else {\r\n          setCurrStepIdx(currStepIdx + 1);\r\n          setCurrSet(1);\r\n        }\r\n      } else {\r\n        setCurrSet(currSet + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {workouts.length > 0 && (\r\n        <>\r\n          {getContent()}\r\n          <div className='row'>\r\n            <div\r\n              className='col s4 offset-s8 m2 offset-m8 xl1 offset-xl8 nextStepPreview'\r\n              onClick={getNext}\r\n            >\r\n              <p>TO NEXT</p>\r\n              {getPreviewContent()}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      <BackButton\r\n        altText={'CANCEL'}\r\n        target='/plans'\r\n        onClick={() => {\r\n          setPlanID(null);\r\n          setPlanName('');\r\n          setPlanSteps([]);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  plan: state.plan,\r\n});\r\n\r\nPlanGuidePage.propTypes = {\r\n  plan: PropTypes.object.isRequired,\r\n  setPlanID: PropTypes.func.isRequired,\r\n  setPlanName: PropTypes.func.isRequired,\r\n  setPlanSteps: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPlanID,\r\n  setPlanName,\r\n  setPlanSteps,\r\n})(PlanGuidePage);\r\n","import {\r\n  SET_EQUIPMENT,\r\n  SET_SUB_MUSCLES,\r\n  SET_MUSCLE_GROUP,\r\n  GET_EQUIPMENT_OPTIONS,\r\n  SET_SELECTIONS_LOADING,\r\n  SELECTIONS_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  muscleGroup: '',\r\n  subMuscles: [],\r\n  equipment: [],\r\n  equipmentOptions: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst WorkoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MUSCLE_GROUP:\r\n      return {\r\n        ...state,\r\n        muscleGroup: action.payload,\r\n      };\r\n    case SET_SUB_MUSCLES:\r\n      return {\r\n        ...state,\r\n        subMuscles: action.payload,\r\n      };\r\n    case SET_EQUIPMENT:\r\n      return {\r\n        ...state,\r\n        equipment: action.payload,\r\n      };\r\n    case GET_EQUIPMENT_OPTIONS:\r\n      return {\r\n        ...state,\r\n        equipmentOptions: action.payload,\r\n        loading: false,\r\n      };\r\n    case SELECTIONS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_SELECTIONS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default WorkoutReducer;\r\n","import {\r\n  GET_WORKOUTS,\r\n  CLEAR_WORKOUTS,\r\n  SHUFFLE_WORKOUTS,\r\n  WORKOUTS_ERROR,\r\n  SET_WORKOUTS_LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  workouts: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nconst GeneratedWorkoutsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_WORKOUTS:\r\n      return {\r\n        ...state,\r\n        workouts: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_WORKOUTS:\r\n      return {\r\n        ...state,\r\n        workouts: [],\r\n      };\r\n    case SHUFFLE_WORKOUTS:\r\n      return {\r\n        ...state,\r\n        workouts: shuffle(state.workouts),\r\n      };\r\n    case WORKOUTS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_WORKOUTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default GeneratedWorkoutsReducer;\r\n","import {\r\n  SET_CURR_USER,\r\n  SET_AUTHENTICATED,\r\n  GET_CURR_USER_PLANS,\r\n  DELETE_CURR_USER_PLAN,\r\n  SET_MESSAGE,\r\n  USERS_ERROR,\r\n  CLEAR_USER,\r\n} from '../actions/types';\r\n\r\n//TODO implement toastMessage (set ToastMessage on 401 res in actions)\r\nconst initialState = {\r\n  currUser: null,\r\n  isAuthenticated: false,\r\n  currUserPlans: [],\r\n  message: null,\r\n  error: null,\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURR_USER:\r\n      return {\r\n        ...state,\r\n        currUser: action.payload,\r\n      };\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n      };\r\n    case GET_CURR_USER_PLANS:\r\n      return {\r\n        ...state,\r\n        currUserPlans: action.payload,\r\n      };\r\n    case DELETE_CURR_USER_PLAN:\r\n      return {\r\n        ...state,\r\n        currUserPlans: state.currUserPlans.filter(\r\n          (plan) => plan._id !== action.payload.toString()\r\n        ),\r\n      };\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.payload,\r\n      };\r\n    case CLEAR_USER:\r\n      return {\r\n        ...initialState,\r\n        message: state.message,\r\n      };\r\n    case USERS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import {\r\n  SET_PLAN_ID,\r\n  SET_PLAN_NAME,\r\n  SET_PLAN_STEPS,\r\n  ADD_PLAN_STEP,\r\n  PLANS_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  id: null,\r\n  name: '',\r\n  steps: [],\r\n  error: null,\r\n};\r\n\r\nconst WorkoutPlanReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PLAN_ID:\r\n      return {\r\n        ...state,\r\n        id: action.payload,\r\n      };\r\n    case SET_PLAN_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n      };\r\n    case SET_PLAN_STEPS:\r\n      return {\r\n        ...state,\r\n        steps: action.payload,\r\n      };\r\n    case ADD_PLAN_STEP:\r\n      return {\r\n        ...state,\r\n        steps: [...state.steps, { ...action.payload, _id: state.steps.length }],\r\n      };\r\n    case PLANS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default WorkoutPlanReducer;\r\n","import { combineReducers } from 'redux';\r\nimport WorkoutReducer from './WorkoutReducer';\r\nimport GeneratedWorkoutsReducer from './GeneratedWorkoutsReducer';\r\nimport UserReducer from './UserReducer';\r\nimport WorkoutPlanReducer from './WorkoutPlanReducer';\r\n\r\nexport default combineReducers({\r\n  workout: WorkoutReducer,\r\n  generatedWorkouts: GeneratedWorkoutsReducer,\r\n  user: UserReducer,\r\n  plan: WorkoutPlanReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  // whitelist: [],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nconst persistedStore = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default persistedStore;\r\n","import React, { useEffect } from 'react';\r\nimport PrivateRoute from './hocs/PrivateRoute';\r\nimport UnPrivateRoute from './hocs/UnPrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport LandingPage from './pages/landingPage/LandingPage';\r\nimport HomePage from './pages/homePage/HomePage';\r\nimport NewPlanPage from './pages/NewPlanPage';\r\nimport EditPlanPage from './pages/EditPlanPage';\r\nimport AddStepPage from './pages/AddStepPage';\r\nimport UsePlansPage from './pages/usePlansPage/UsePlansPage';\r\nimport PlanGuidePage from './pages/planGuidePage/PlanGuidePage';\r\nimport MuscleGroupSelectionPage from './pages/MuscleGroupSelectionPage';\r\nimport SubMuscleSelectionPage from './pages/SubMuscleSelectionPage';\r\nimport EquipmentSelectionPage from './pages/EquipmentSelectionPage';\r\nimport GeneratedWorkoutsPage from './pages/generatedWorkoutsPage/GeneratedWorkoutsPage';\r\nimport './App.css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport persistedStore from './store';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  const GetToken = () => {\r\n    let { token } = useParams();\r\n    const cookies = new Cookies();\r\n    cookies.set('access_token', token, { path: '/' });\r\n    return <Redirect to='/home-page' />;\r\n  };\r\n\r\n  return (\r\n    <Provider store={persistedStore.store}>\r\n      <PersistGate loading={null} persistor={persistedStore.persistor}>\r\n        <div className='App'>\r\n          <Router>\r\n            <Switch>\r\n              <UnPrivateRoute exact path='/' component={LandingPage} />\r\n              <Route exact path='/home-page/:token' children={<GetToken />} />\r\n              <PrivateRoute exact path='/home-page' component={HomePage} />\r\n              <PrivateRoute exact path='/plan' component={NewPlanPage} />\r\n              <PrivateRoute exact path='/edit-plan' component={EditPlanPage} />\r\n              <PrivateRoute exact path='/add-step' component={AddStepPage} />\r\n              <PrivateRoute exact path='/plans' component={UsePlansPage} />\r\n              <PrivateRoute exact path='/guide' component={PlanGuidePage} />\r\n              <Route exact path='/muscle-group-selection'>\r\n                <MuscleGroupSelectionPage />\r\n              </Route>\r\n              <Route exact path='/sub-muscle-selection'>\r\n                <SubMuscleSelectionPage />\r\n              </Route>\r\n              <Route exact path='/equipment-selection'>\r\n                <EquipmentSelectionPage />\r\n              </Route>\r\n              <Route exact path='/workouts'>\r\n                <GeneratedWorkoutsPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}